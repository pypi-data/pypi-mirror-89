Metadata-Version: 2.1
Name: com.wyattbaldwin.cached-property
Version: 1.0.post2
Summary: @cached_property
Home-page: https://github.com/wylee/com.wyattbaldwin/tree/dev/cached_property
Author: Wyatt Baldwin
Author-email: self@wyattbaldwin.com
Requires-Python: >=3.6,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Project-URL: Repository, https://github.com/wylee/com.wyattbaldwin/tree/dev/cached_property
Description-Content-Type: text/markdown

# Cached Property

Provides a thread safe `@cached_property` decorator that can be used
in place of the built in `@property` decorator for properties that are
expensive to compute or that aren't expected to change over the lifetime
of an instance.

## Usage

    >>> from cached_property import cached_property
    >>> class MyClass:
    ...     @cached_property
    ...     def prop(self):
    ...         return 2 ** 42
    ...
    >>> instance = MyClass()
    >>> "prop" in instance.__dict__
    False
    >>> instance.prop  # value computed and cached
    4398046511104
    >>> "prop" in instance.__dict__
    True
    >>> instance.prop  # cached value returned directly
    4398046511104

