{"version":3,"sources":["utils/ws.ts","components/ConnectionAlert.tsx","components/GridView.tsx","utils/useToggle.ts","utils/useRpc.ts","utils/useDatasets.ts","pages/HomePage.tsx","utils/useModels.ts","pages/ModelsPage.tsx","components/ButtonBar.tsx","pages/TrainPage.tsx","modals/DeleteModal.tsx","modals/MoveModal.tsx","pages/UploadedPage.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["onMessageCallbacks","Set","stateChangeCallbacks","socket","initSocket","forEach","cb","proto","window","location","protocol","replace","ws","WebSocket","host","addEventListener","console","log","event","data","JSON","parse","warn","setTimeout","error","jsonRpcId","jsonRpc","method","params","Promise","resolve","reject","id","done","onMessage","msg","jsonrpc","result","send","readyState","OPEN","stringify","onStateChange","state","callback","add","delete","ConnectionAlert","useEffect","Notification","warning","title","key","close","GridView","props","className","useToggle","def","useReducer","toggle","val","useRpc","defaultValue","useState","setError","pending","setPending","value","setValue","reloadValue","reload","paramsMemo","useMemo","active","then","undefined","catch","err","train","name","path","sessions","test","useDatasets","HomePage","datasets","map","ds","DatasetInfo","Panel","header","to","shaded","length","reduce","sum","cur","frames","ModelsPage","models","m","ModelInfo","Plot","model","rnd","alt","src","ButtonBar","emptyForm","TrainPage","status","setStatus","epoch","setEpoch","percent","setPercent","setModel","setRnd","fromValue","useRef","Date","now","Math","round","payload","Message","description","Form","onChange","values","Object","keys","k","v","Number","current","formDefaultValue","layout","NumberParam","min","step","help","bordered","collapsible","type","BoolParam","defaultChecked","BATCH_NORM","FLIP_AUG","CMD_AUG","Button","onClick","appearance","Progress","Line","bodyFill","defaultExpanded","FormGroup","ControlLabel","FormControl","accepter","InputNumber","HelpBlock","Toggle","DeleteModal","Modal","backdrop","size","Header","Title","Body","Footer","deleteSession","onHide","MoveModal","label","children","makeData","onSubmit","new_path","Tree","defaultExpandAll","disabledItemValues","block","basename","session","file_list","UploadedPage","match","useRouteMatch","url","component","SessionPanel","ListView","useParams","SessionComp","Loader","s","showMove","toggleMove","showDel","toggleDel","style","display","justifyContent","alignItems","Dropdown","Item","onSelect","show","App","Container","Navbar","href","Nav","Content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.299be7ea.chunk.js","sourcesContent":["export interface WsMessage {\n    event: string;\n    payload: any;\n}\nexport type JsonRpcResponse = JsonRpcResult | JsonRpcError;\nexport interface JsonRpcResult {\n    jsonrpc: \"2.0\";\n    id: number;\n    result: any;\n}\nexport interface JsonRpcError {\n    jsonrpc: \"2.0\";\n    id: number;\n    error: any;\n}\ntype ConnectionState = 'connecting' | 'connected' | 'closed';\n\ntype MessageCallback = (msg: WsMessage, event: MessageEvent) => void;\ntype ConnectionStateCallback = (state: ConnectionState) => void;\n\nconst onMessageCallbacks = new Set<MessageCallback>();\nconst stateChangeCallbacks = new Set<ConnectionStateCallback>();\nlet socket = initSocket();\nlet jsonRpcId = 1;\n\nexport function jsonRpc<T>(method: string, params?: any) {\n    return new Promise<T>((resolve, reject) => {\n        const id = jsonRpcId++;\n        const done = onMessage((msg: any) => {\n            if (msg.jsonrpc === '2.0' && msg.id === id) {\n                done();\n                if (msg.error) {\n                    reject(msg.error);\n                } else {\n                    resolve(msg.result);\n                }\n            }\n        });\n        send({\n            jsonrpc: '2.0',\n            method,\n            params,\n            id,\n        });\n        setTimeout(() => {\n            done();\n            reject(\"JsonRpc timeout\");\n        }, 10000);\n    });\n}\n\nexport function send(data: any) {\n    if (socket.readyState === WebSocket.OPEN) {\n        const msg = JSON.stringify(data);\n        console.log('ws.send', msg);\n        socket.send(msg);\n    } else {\n        const done = onStateChange((state) => {\n            if (state === 'connected') {\n                done();\n                send(data);\n            }\n        });\n    }\n}\n\nexport function onMessage(callback: MessageCallback) {\n    onMessageCallbacks.add(callback);\n    return () => {\n        onMessageCallbacks.delete(callback);\n    }\n}\n\n\nexport function onStateChange(callback: ConnectionStateCallback) {\n    stateChangeCallbacks.add(callback);\n    return () => {\n        stateChangeCallbacks.delete(callback);\n    }\n}\n\nfunction initSocket() {\n    stateChangeCallbacks.forEach(cb => cb('connecting'));\n    const proto = window.location.protocol.replace('http', 'ws');\n    const ws = new WebSocket(`${proto}//${window.location.host}/ws`);\n    ws.addEventListener('open', () => {\n        console.log('ws.open');\n        stateChangeCallbacks.forEach(cb => cb('connected'));\n    });\n    ws.addEventListener('message', (event) => {\n        console.log('ws.message', event.data);\n        const data = JSON.parse(event.data);\n        onMessageCallbacks.forEach((cb) => {\n            cb(data, event);\n        })\n    });\n    ws.addEventListener('close', () => {\n        console.warn('ws.closed');\n        stateChangeCallbacks.forEach(cb => cb('closed'));\n        setTimeout(() => {\n            socket = initSocket();\n        }, 3000);\n    });\n    ws.addEventListener('error', () => {\n        console.error('ws.error');\n    });\n\n    return ws;\n}\n","import {useEffect} from 'react';\nimport {Notification} from 'rsuite';\nimport {onStateChange} from '../utils/ws';\n\n\nexport function ConnectionAlert() {\n    useEffect(() => onStateChange((state) => {\n        if (state !== 'connected') {\n            Notification.warning({\n                title: 'Not connected',\n                key: 'connection'\n            });\n        } else {\n            Notification.close('connection');\n        }\n    }), [])\n    return null;\n}\n","import React from 'react';\nimport './GridView.css'\n\nexport function GridView(props: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) {\n    return (\n        <div className=\"grid-view\" {...props}/>\n    );\n}\n","import {useReducer} from 'react';\n\nexport function useToggle(def = false) {\n    return useReducer(toggle, def);\n}\n\nfunction toggle(val: boolean) {\n    return !val;\n}\n","import {useEffect, useMemo, useState} from 'react';\nimport {useToggle} from './useToggle';\nimport {jsonRpc} from './ws';\n\nexport function useRpc<T>(defaultValue: T, method: string, params?: any) {\n    const [error, setError] = useState();\n    const [pending, setPending] = useState(true);\n    const [value, setValue] = useState(defaultValue);\n    const [reloadValue, reload] = useToggle(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const paramsMemo = useMemo(() => params, [JSON.stringify(params)]);\n    useEffect(() => {\n        setPending(true);\n        let active = true;\n        console.log('useRpc', method, paramsMemo);\n        jsonRpc<T>(method, paramsMemo)\n            .then(data => {\n                if (active) {\n                    setValue(data);\n                    setError(undefined);\n                    setPending(false);\n                }\n            })\n            .catch(err => {\n                if (active) {\n                    console.error(err);\n                    setError(err);\n                    setPending(false);\n                }\n            });\n        return () => {\n            active = false;\n        };\n    }, [method, paramsMemo, reloadValue]);\n    return {error, pending, value, reload};\n}\n","import {useRpc} from 'src/utils/useRpc';\n\nexport interface Session {\n    name: string;\n    path: string;\n    frames: number;\n}\n\nexport interface Dataset {\n    name: string;\n    path: string;\n    sessions: Session[];\n}\n\nconst defaultValue = {\n    train: [{\n        name: 'loading...',\n        path: '',\n        sessions: [] as Session[],\n    }] as Dataset[],\n    test: [{\n        name: 'loading...',\n        path: '',\n        sessions: [] as Session[],\n    }] as Dataset[],\n};\n\nexport function useDatasets() {\n    return useRpc(defaultValue, 'getDatasets')\n}\n","import {Panel} from 'rsuite';\nimport {GridView} from 'src/components/GridView';\nimport {Dataset, useDatasets} from 'src/utils/useDatasets';\nimport {Link} from 'react-router-dom';\n\nexport function HomePage() {\n    const datasets = useDatasets();\n    return (\n        <>\n            <h3>Train datasets</h3>\n            <GridView>\n                {datasets.value.train.map(ds => (\n                    <DatasetInfo key={ds.name} {...ds}/>\n                ))}\n            </GridView>\n            <h3>Test datasets</h3>\n            <GridView>\n                {datasets.value.test.map(ds => (\n                    <DatasetInfo key={ds.name} {...ds}/>\n                ))}\n            </GridView>\n        </>\n    );\n}\n\nfunction DatasetInfo(props: Dataset) {\n    return (\n        <Panel header={<Link to={props.path}>{props.name}</Link>} shaded>\n            <div>Sessions: {props.sessions.length}</div>\n            <div>Frames: {props.sessions.reduce((sum, cur) => sum + cur.frames, 0)}</div>\n        </Panel>\n    );\n}\n","import {useRpc} from 'src/utils/useRpc';\n\nexport interface Model {\n    name: string;\n}\n\nconst defaultValue: Model[] = [];\n\nexport function useModels() {\n    return useRpc(defaultValue, 'getModels')\n}\n","import {Panel} from 'rsuite';\nimport {GridView} from 'src/components/GridView';\nimport {Model, useModels} from 'src/utils/useModels';\nimport {Link} from 'react-router-dom';\n\nexport function ModelsPage() {\n    const models = useModels();\n    return (\n        <>\n            <h3>Models</h3>\n            {models.value.map((m: Model) => (\n                <ModelInfo key={m.name} {...m}/>\n            ))}\n        </>\n    );\n}\n\nfunction ModelInfo(props: Model) {\n    return (\n        <Panel header={<Link to={props.name}>{props.name}</Link>} shaded>\n            <GridView>\n                <Plot model={props.name} rnd=\"\" name=\"error\"/>\n                <Plot model={props.name} rnd=\"\" name=\"direction\"/>\n                <Plot model={props.name} rnd=\"\" name=\"angle\"/>\n                <Plot model={props.name} rnd=\"\" name=\"loss\"/>\n            </GridView>\n        </Panel>\n    );\n}\n\nfunction Plot(props: {name: string, model: string, rnd: any}) {\n    return (\n        <img alt={`${props.name} plot`} src={`/models/${props.model}/logs/${props.name}.png?rnd=${props.rnd}`}/>\n    );\n}\n","import React from 'react';\nimport './ButtonBar.css'\n\nexport function ButtonBar(props: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) {\n    return (\n        <div className=\"button-bar\" {...props}/>\n    );\n}\n","import {useEffect, useRef, useState} from 'react';\nimport {\n    Button, ControlLabel,\n    Form, FormControl, FormGroup,\n    InputNumber, InputNumberProps,\n    Message, HelpBlock,\n    Panel, Progress,\n    Toggle, ToggleProps,\n} from 'rsuite';\nimport {ButtonBar} from '../components/ButtonBar';\nimport {GridView} from '../components/GridView';\nimport {useRpc} from '../utils/useRpc';\nimport {onMessage, jsonRpc} from '../utils/ws';\n\ninterface FormValues {\n    TRAIN_BATCH_SIZE: number;\n    TEST_BATCH_SIZE: number;\n    LEARNING_RATE: number;\n    NUM_EPOCHS: number;\n    BATCH_NORM: boolean;\n    FLIP_AUG: boolean;\n    CMD_AUG: boolean;\n}\n\nconst emptyForm = {} as FormValues;\n\nexport function TrainPage() {\n    const [status, setStatus] = useState<'success' | 'fail' | 'active' | undefined>(undefined);\n    const [epoch, setEpoch] = useState<number | undefined>(undefined);\n    const [percent, setPercent] = useState<number | undefined>(undefined);\n    const [model, setModel] = useState('');\n    const [rnd, setRnd] = useState(0);\n    const fromValue = useRef<FormValues>(emptyForm);\n    function onChange(values: any) {\n        Object.keys(values).forEach((k) => {\n            const v = values[k];\n            values[k] = typeof v === 'string' ? Number(v) : v;\n        });\n        console.log(values)\n        fromValue.current = values;\n    }\n    const {pending, value} = useRpc<FormValues>(emptyForm, 'getHyperparameters');\n\n    useEffect(() => {\n        return onMessage((msg) => {\n            switch (msg.event) {\n                case 'started':\n                    setStatus('active');\n                    setPercent(undefined);\n                    break;\n                case 'preview':\n                    setRnd(Date.now());\n                    break;\n                case 'progress':\n                    setEpoch(Math.round(msg.payload.epoch * 100));\n                    setPercent(Math.round(msg.payload.train * 100));\n                    break;\n                case 'cancelled':\n                    setStatus('fail');\n                    break;\n                case 'done':\n                    setRnd(Date.now());\n                    setStatus('success');\n                    setModel(msg.payload.model);\n                    break;\n            }\n        });\n    }, [])\n\n    if (pending) {\n        return null;\n    }\n\n    return (\n        <div className=\"trainPage\">\n            <h3>Model training</h3>\n            <Panel shaded header=\"Hyperparameters\">\n                <Message description=\"You may have to tune the learning rate and batch size depending on your available compute resources and dataset. As a general rule of thumb, if you increase the batch size by a factor of n, you can increase the learning rate by a factor of sqrt(n).\"/>\n                <Form onChange={onChange} formDefaultValue={value} layout=\"horizontal\">\n                    <NumberParam name=\"TRAIN_BATCH_SIZE\" min={1}/>\n                    <NumberParam name=\"TEST_BATCH_SIZE\" min={1}/>\n                    <NumberParam name=\"LEARNING_RATE\" min={0} step={0.0001}/>\n                    <NumberParam\n                        name=\"NUM_EPOCHS\"\n                        min={1}\n                        help=\"For debugging and hyperparamter tuning, you can set the number of epochs to a small value like 10. If you want to train a model which will achieve good performance, you should set it to 50 or more. In our paper we used 100.\"\n                    />\n                    <Panel bordered header=\"Advanced parameters\" collapsible>\n                        <Message type=\"warning\" description=\"Don't change these unless you know what you are doing\" />\n                        <BoolParam name=\"BATCH_NORM\" defaultChecked={value.BATCH_NORM}/>\n                        <BoolParam name=\"FLIP_AUG\" defaultChecked={value.FLIP_AUG}/>\n                        <BoolParam name=\"CMD_AUG\" defaultChecked={value.CMD_AUG}/>\n                    </Panel>\n                </Form>\n                <ButtonBar>\n                    <Button onClick={() => jsonRpc('start', fromValue.current)} appearance=\"primary\">Start</Button>\n                    <Button onClick={() => jsonRpc('stop')}>Stop</Button>\n                </ButtonBar>\n            </Panel>\n            {!!percent && (\n                <Panel shaded header=\"Progress\">\n                    <div>\n                        Current epoch:\n                        <Progress.Line percent={epoch}/>\n                    </div>\n                    <div>\n                        Training:\n                        <Progress.Line percent={percent} status={status}/>\n                    </div>\n                </Panel>\n            )}\n            {!!rnd && (\n                <Panel bodyFill shaded header=\"Train preview\" collapsible defaultExpanded>\n                    <img alt=\"preview thumbnails\" src={\"/models/train_preview.png?rnd=\"+rnd}/>\n                </Panel>\n            )}\n            {model && (\n                <Panel bodyFill shaded header=\"Test preview\" collapsible defaultExpanded>\n                    <img alt=\"preview thumbnails\" src={`/models/${model}/logs/test_preview.png?rnd=${rnd}`}/>\n                </Panel>\n            )}\n            {model && (\n                <GridView>\n                    <Plot model={model} rnd={rnd} name=\"error\"/>\n                    <Plot model={model} rnd={rnd} name=\"direction\"/>\n                    <Plot model={model} rnd={rnd} name=\"angle\"/>\n                    <Plot model={model} rnd={rnd} name=\"loss\"/>\n                </GridView>\n            )}\n        </div>\n    );\n}\n\nfunction Plot(props: {name: string, model: string, rnd: any}) {\n    return (\n        <Panel bodyFill shaded>\n            <img alt={`${props.name} plot`} src={`/models/${props.model}/logs/${props.name}.png?rnd=${props.rnd}`}/>\n        </Panel>\n    );\n}\n\nfunction NumberParam({help, ...props}: InputNumberProps) {\n    return (\n        <FormGroup>\n            <ControlLabel>{props.name}</ControlLabel>\n            <FormControl accepter={InputNumber} {...props}/>\n            {help && <HelpBlock>{help}</HelpBlock>}\n        </FormGroup>\n    );\n}\n\nfunction BoolParam(props: ToggleProps) {\n    return (\n        <div className=\"bool-input\">\n            <ControlLabel>{props.name}</ControlLabel>\n            <FormControl accepter={Toggle} {...props} />\n        </div>\n    );\n}\n","import {Button, Modal, ModalProps} from 'rsuite';\nimport {jsonRpc} from '../utils/ws';\n\nexport function DeleteModal({path, ...props}: ModalProps & {path: string}) {\n    return (\n        <Modal backdrop=\"static\" size=\"xs\" {...props}>\n            <Modal.Header>\n                <Modal.Title>Are you really want to delete this session?</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <img src={`${path}/preview.gif`} alt=\"preview\"/>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={() => deleteSession(path)} appearance=\"primary\">\n                    Yes\n                </Button>\n                <Button onClick={props.onHide} appearance=\"subtle\">\n                    No\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nfunction deleteSession(path: string) {\n    jsonRpc('deleteSession', {path})\n}\n","import {useRef} from 'react';\nimport {Button, ControlLabel, Form, FormGroup, Modal, ModalProps, Tree} from 'rsuite';\nimport {Dataset, useDatasets} from '../utils/useDatasets';\nimport {jsonRpc} from '../utils/ws';\n\nexport function MoveModal({path, ...props}: ModalProps & {path: string}) {\n    const datasets = useDatasets();\n    const data = makeData(datasets.value);\n    const fromValue = useRef('');\n    function onChange(value: string) {\n        console.log(value)\n        fromValue.current = value;\n    }\n    function onSubmit() {\n        jsonRpc('moveSession', {\n            path,\n            new_path: fromValue.current,\n        })\n    }\n    return (\n        <Modal backdrop=\"static\" size=\"xs\" {...props}>\n            <Form onSubmit={onSubmit}>\n                <Modal.Header>\n                    <Modal.Title>Move session</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FormGroup>\n                        <ControlLabel>To folder:</ControlLabel>\n                        <Tree\n                            name=\"new_path\"\n                            data={data}\n                            defaultValue=\"uploaded\"\n                            defaultExpandAll\n                            disabledItemValues={['train', 'test']}\n                            onChange={onChange}\n                            block\n                        />\n                    </FormGroup>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button type=\"submit\" appearance=\"primary\">\n                        Move\n                    </Button>\n                    <Button onClick={props.onHide} appearance=\"subtle\">\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n}\n\nfunction makeData(datasets: { test: Dataset[]; train: Dataset[] }) {\n    return [{\n        value: 'uploaded',\n        label: 'uploaded',\n    }, {\n        value: 'train',\n        label: 'train',\n        children: datasets.train.map(value => ({\n            value: value.path,\n            label: value.name,\n        })),\n    }, {\n        value: 'test',\n        label: 'test',\n        children: datasets.test.map(value => ({\n            value: value.path,\n            label: value.name,\n        })),\n    }];\n}\n","import {useEffect} from 'react';\nimport {Link, Route, Switch, useParams, useRouteMatch} from 'react-router-dom';\nimport {Dropdown, Loader, Panel} from 'rsuite';\nimport {Session} from 'src/utils/useDatasets';\nimport {GridView} from '../components/GridView';\nimport {DeleteModal} from '../modals/DeleteModal';\nimport {MoveModal} from '../modals/MoveModal';\nimport {useRpc} from '../utils/useRpc';\nimport {useToggle} from '../utils/useToggle';\nimport {onMessage} from '../utils/ws';\n\nconst defaultValue = {\n    basename: '',\n    path: '',\n    session: undefined as Session | undefined,\n    file_list: [] as Session[],\n}\n\nexport function UploadedPage() {\n    const match = useRouteMatch();\n    return (\n        <Switch>\n            <Route path={match.url + '/:path'} component={SessionPanel}/>\n            <Route component={ListView}/>\n        </Switch>\n    );\n}\n\nfunction SessionPanel() {\n    const {path} = useParams<any>();\n    const info = useRpc(defaultValue, 'listDir',  {path: 'uploaded/'+path});\n    const {session} = info.value;\n    return (\n        <Panel shaded>\n            <h3>{path}</h3>\n            {session ? <SessionComp {...session}/> : <Loader/>}\n        </Panel>\n    );\n}\n\nfunction ListView() {\n    const {value, reload} = useRpc(defaultValue, 'listDir',  {path: 'uploaded'});\n    useEffect(() => onMessage((msg) => {\n        if (msg.event === 'deleteSessionSuccess' || msg.event === 'moveSessionSuccess') {\n            reload();\n        }\n    }), [reload])\n    return <>\n        <h3>Uploaded sessions</h3>\n        <GridView>\n            {!value.file_list.length && (\n                <Panel shaded>\n                    No sessions\n                </Panel>\n            )}\n            {value.file_list.map(s => (\n                <Panel key={s.path} bodyFill shaded>\n                    <SessionComp {...s}/>\n                </Panel>\n            ))}\n        </GridView>\n    </>;\n}\n\nfunction SessionComp(props: Session) {\n    const [showMove, toggleMove] = useToggle(false);\n    const [showDel, toggleDel] = useToggle(false);\n    return (\n        <>\n            <img src={`${props.path}/preview.gif`} alt=\"preview\"/>\n            <Panel>\n                <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n                    <Link to={props.path}>{props.name}</Link>\n                    <Dropdown title=\"Actions\" >\n                        <Dropdown.Item onSelect={toggleMove}>Move...</Dropdown.Item>\n                        <Dropdown.Item onSelect={toggleDel}>Remove...</Dropdown.Item>\n                    </Dropdown>\n                </div>\n                <div>Frames: {props.frames}</div>\n            </Panel>\n            {showMove && <MoveModal path={props.path} show={showMove} onHide={toggleMove}/>}\n            <DeleteModal path={props.path} show={showDel} onHide={toggleDel}/>\n        </>\n    );\n}\n","import {Route, Switch} from 'react-router-dom';\nimport {Container, Content, Header, Nav, Navbar} from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './App.css';\nimport {ConnectionAlert} from './components/ConnectionAlert';\nimport {HomePage} from './pages/HomePage';\nimport {ModelsPage} from './pages/ModelsPage';\nimport {TrainPage} from './pages/TrainPage';\nimport {UploadedPage} from './pages/UploadedPage';\n\nfunction App() {\n    return (\n        <Container className=\"App\">\n            <Header>\n                <Navbar appearance=\"inverse\">\n                    <Navbar.Header>\n                        <a href=\"#/\" className=\"navbar-brand logo\">OpenBot Driving Policy Trainer</a>\n                    </Navbar.Header>\n                    <Navbar.Body>\n                        <Nav>\n                            <Nav.Item href=\"#/\">Datasets</Nav.Item>\n                            <Nav.Item href=\"#/models\">Models</Nav.Item>\n                            <Nav.Item href=\"#/uploaded\">Uploaded</Nav.Item>\n                            <Nav.Item href=\"#/train\">Train</Nav.Item>\n                        </Nav>\n                    </Navbar.Body>\n                </Navbar>\n            </Header>\n            <Content>\n                <Switch>\n                    <Route path=\"/models\">\n                        <ModelsPage />\n                    </Route>\n                    <Route path=\"/uploaded\">\n                        <UploadedPage />\n                    </Route>\n                    <Route path=\"/train\">\n                        <TrainPage />\n                    </Route>\n                    <Route>\n                        <HomePage />\n                    </Route>\n                </Switch>\n            </Content>\n            <ConnectionAlert/>\n        </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {HashRouter} from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <App />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}