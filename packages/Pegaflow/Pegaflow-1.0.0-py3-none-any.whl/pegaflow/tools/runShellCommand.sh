#!/bin/bash

set -e

TOPDIR=`pwd`
gzipOutputDefault=0

if test $# -lt 2 ; then
	echo ""
	echo "Usage:  $0 shellCommandFile shellOutputFile [gzipOutput]"
	echo ""
	echo "Note:"
	echo "	This program runs shell commands from shellCommandFile and pipes the stdout to shellOutputFile."
	echo "	If gzipOutput is not 0, the output from shellCommandFile will be piped through gzip to shellOutputFile."
	echo "     Default gzipOutput is $gzipOutputDefault."
	echo
	echo
	echo "Examples:"
	echo "  #run the ms_command.sh (contains a commandline to run simulation program, ms, generated by programs like history2ms.pl from PSMC)"
	echo "	$0 ms_command.sh msOutput.txt"
	echo "	$0 ms_command.sh msOutput.txt.gz 1"
	exit 1
fi

shellDir=`dirname $0`
source $shellDir/common.sh

shellCommandFile=$1
shellOutputFile=$2
gzipOutput=$3
if [ -z $gzipOutput ]
then
	gzipOutput=$gzipOutputDefault
fi

echo "gzipOutput is $gzipOutput."

if test "$gzipOutput" = "0"; then
	sh $shellCommandFile > $shellOutputFile
else
	sh $shellCommandFile | gzip > $shellOutputFile
	exitCodeAll="${PIPESTATUS[0]} ${PIPESTATUS[1]}"	#must be together in one line. PIPESTATUS[1] in subsequent lines has different meaning.
	exitCode1=`echo $exitCodeAll|awk -F ' ' '{print $1}'`
	exitCode2=`echo $exitCodeAll|awk -F ' ' '{print $2}'`
	
	echo "exit codes: $exitCode1, $exitCode2"
	
	if test "$exitCode1" = "0" && test "$exitCode2" = "0"
	then
		exit 0
	else
		exit 3
	fi
fi