{
  "DebugRunner.report_failure": {
    "raises": [
      "DocTestFailure"
    ]
  },
  "DebugRunner.report_unexpected_exception": {
    "raises": [
      "UnexpectedException"
    ]
  },
  "DocFileSuite": {
    "raises": [
      "TypeError",
      "ValueError"
    ]
  },
  "DocFileTest": {
    "has": [
      "read"
    ],
    "raises": [
      "TypeError",
      "ValueError"
    ]
  },
  "DocTest.__init__": {
    "raises": [
      "AssertionError"
    ]
  },
  "DocTestFinder._find": {
    "has": [
      "stdout"
    ],
    "raises": [
      "ValueError"
    ]
  },
  "DocTestFinder._find_lineno": {
    "raises": [
      "TypeError",
      "ValueError"
    ]
  },
  "DocTestFinder._from_module": {
    "raises": [
      "ValueError"
    ]
  },
  "DocTestFinder.find": {
    "has": [
      "global"
    ],
    "raises": [
      "TypeError",
      "ValueError"
    ]
  },
  "DocTestParser._check_prefix": {
    "raises": [
      "ValueError"
    ]
  },
  "DocTestParser._check_prompt_blank": {
    "raises": [
      "ValueError"
    ]
  },
  "DocTestParser._find_options": {
    "raises": [
      "ValueError"
    ]
  },
  "DocTestRunner.__patched_linecache_getlines": {
    "has": [
      "global"
    ]
  },
  "DocTestRunner.__run": {
    "raises": [
      "AssertionError"
    ]
  },
  "DocTestRunner.run": {
    "has": [
      "import"
    ]
  },
  "DocTestRunner.summarize": {
    "has": [
      "stdout"
    ],
    "raises": [
      "AssertionError"
    ]
  },
  "DocTestSuite": {
    "raises": [
      "TypeError"
    ]
  },
  "OutputChecker.output_difference": {
    "raises": [
      "AssertionError",
      "TypeError"
    ]
  },
  "_ellipsis_match": {
    "raises": [
      "AssertionError"
    ]
  },
  "_exception_traceback": {
    "has": [
      "stdout"
    ]
  },
  "_load_testfile": {
    "has": [
      "read"
    ],
    "raises": [
      "TypeError",
      "ValueError"
    ]
  },
  "_module_relative_path": {
    "raises": [
      "TypeError",
      "ValueError"
    ]
  },
  "_normalize_module": {
    "raises": [
      "TypeError"
    ]
  },
  "_test": {
    "has": [
      "global",
      "import"
    ],
    "raises": [
      "TypeError",
      "ValueError"
    ]
  },
  "debug": {
    "has": [
      "import",
      "stdout"
    ],
    "raises": [
      "TypeError",
      "ValueError"
    ]
  },
  "debug_script": {
    "has": [
      "import",
      "stdout"
    ]
  },
  "debug_src": {
    "has": [
      "import",
      "stdout"
    ]
  },
  "set_unittest_reportflags": {
    "has": [
      "global"
    ],
    "raises": [
      "ValueError"
    ]
  },
  "testfile": {
    "has": [
      "global",
      "read"
    ],
    "raises": [
      "TypeError",
      "ValueError"
    ]
  },
  "testmod": {
    "has": [
      "global"
    ],
    "raises": [
      "TypeError"
    ]
  },
  "testsource": {
    "raises": [
      "TypeError",
      "ValueError"
    ]
  }
}