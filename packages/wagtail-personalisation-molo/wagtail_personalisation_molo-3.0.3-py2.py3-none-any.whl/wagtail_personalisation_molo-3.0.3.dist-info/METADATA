Metadata-Version: 2.1
Name: wagtail-personalisation-molo
Version: 3.0.3
Summary: A forked version of Wagtail add-on for showing personalized content
Home-page: https://github.com/praekeltfoundation/wagtail-personalisation/
Author: Praekelt.org
Author-email: dev@praekeltfoundation.org
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.9
Classifier: Framework :: Django :: 1.10
Classifier: Framework :: Django :: 1.11
Classifier: Framework :: Django :: 2.2
Classifier: Topic :: Internet :: WWW/HTTP :: Site Management
Requires-Dist: wagtail (~=2.10.2)
Requires-Dist: user-agents (>=1.0.1)
Requires-Dist: wagtailfontawesome (>=1.1.3)
Provides-Extra: docs
Requires-Dist: sphinx (>=1.4.0) ; extra == 'docs'
Provides-Extra: test
Requires-Dist: factory-boy (==2.8.1) ; extra == 'test'
Requires-Dist: isort (==4.3.21) ; extra == 'test'
Requires-Dist: flake8 ; extra == 'test'
Requires-Dist: six ; extra == 'test'
Requires-Dist: flake8-blind-except ; extra == 'test'
Requires-Dist: flake8-debugger ; extra == 'test'
Requires-Dist: flake8-imports ; extra == 'test'
Requires-Dist: freezegun (==0.3.8) ; extra == 'test'
Requires-Dist: pytest-cov (==2.4.0) ; extra == 'test'
Requires-Dist: pytest-django (==3.1.2) ; extra == 'test'
Requires-Dist: pytest-sugar (==0.7.1) ; extra == 'test'
Requires-Dist: pytest-mock (==1.6.3) ; extra == 'test'
Requires-Dist: pytest (==3.1.0) ; extra == 'test'
Requires-Dist: wagtail-factories (==1.1.0) ; extra == 'test'



Wagtail Personalisation
=======================

Wagtail Personalisation is a fully-featured personalisation module for
`Wagtail CMS`_. It enables editors to create customised pages
- or parts of pages - based on segments whose rules are configured directly
in the admin interface.

.. _Wagtail CMS: http://wagtail.io/

.. image:: logo.png
   :scale: 50 %
   :alt: Wagxperience
   :align: center


.. image:: screenshot.png


Instructions
------------
Wagtail Personalisation requires Wagtail 1.9 or 1.10 and Django 1.9, 1.10 or 1.11.

To install the package with pip::

    pip install wagtail-personalisation

Next, include the ``wagtail_personalisation``, ``wagtail.contrib.modeladmin``
and ``wagtailfontawesome`` apps in your project's ``INSTALLED_APPS``:

.. code-block:: python

    INSTALLED_APPS = [
        # ...
        'wagtail.contrib.modeladmin',
        'wagtail_personalisation',
        'wagtailfontawesome',
        # ...
    ]

Make sure that ``django.contrib.sessions.middleware.SessionMiddleware`` has
been added in first, this is a prerequisite for this project.

.. code-block:: python

    MIDDLEWARE = [
        'django.contrib.sessions.middleware.SessionMiddleware',
        # ...
    ]

Sandbox
-------

To experiment with the package you can use the sandbox provided in
this repository. To install this you will need to create and activate a
virtualenv and then run ``make sandbox``. This will start a fresh Wagtail
install, with the personalisation module enabled, on http://localhost:8000
and http://localhost:8000/cms/. The superuser credentials are
``superuser@example.com`` with the password ``testing``.


