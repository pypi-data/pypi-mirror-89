import re
import nltk
import string
from nltk import word_tokenize
from separatrice import Separatrice
nltk.download('punkt')
stop_words = ['такое','какие-то','что делать','а быть может','могут','а вернее', 'хай','приветик', 'а впрочем','а главное', 'а значит', 'а лучше сказать', 'а между прочим', 'а может быть', 'а наоборот', 'а например', 'а следовательно', 'а точнее', 'без всякого сомнения', 'без сомнения', 'безусловно', 'без шуток', 'бесспорно', 'благодарение богу', 'бог даст', 'более того', 'больше того', 'бывает', 'бывало', 'быть может', 'вдобавок ко всему прочему', 'верите ли', 'веришь ли', 'вернее', 'вернее говоря', 'вернее сказать', 'верно', 'вероятнее всего', 'вероятно', 'вестимо', 'видать', 'видимо', 'видит бог', 'видите ли', 'видишь ли', 'видно', 'вишь', 'в конце концов', 'вне всякого сомнения', 'вне сомнения', 'в общем', 'в общем-то', 'во всяком случае', 'во-вторых', 'возможно', 'воистину', 'воля ваша', 'возможно ли', 'вообрази', 'вообрази себе', 'вообразите', 'вообразите себе', 'вообще', 'вообще говоря', 'вообще-то', 'во-первых', 'в принципе', 'впрочем', 'в самом деле', 'в свою очередь', 'в сущности', 'в сущности говоря', 'в-третьих', 'в частности', 'выходит', 'главное', 'главное дело', 'главным делом', 'говорят', 'грешным делом', 'грубо говоря', 'да и то сказать', 'дай бог память', 'далее', 'действительно', 'делать нечего', 'должно быть', 'допустим', 'другими словами', 'если позволите', 'если позволишь', 'если угодно', 'если хотите', 'если хотите знать', 'если хочешь', 'если хочешь знать', 'естественно', 'еще лучше', 'еще того лучше', 'еще того хуже', 'еще хуже', 'жалко', 'жаль', 'знаете', 'знаете ли', 'знаешь', 'знаешь ли', 'знамо', 'знамо дело', 'знать', 'значит', 'значится', 'и вообще', 'известно', 'и кроме того', 'и лучше того', 'и наоборот', 'иначе говоря', 'иначе сказать', 'и однако', 'и правда', 'истинный бог', 'и таким образом', 'и того лучше', 'и того хуже', 'и хуже того', 'кажется', 'кажись', 'казалось', 'казалось бы', 'как бы там ни было', 'как бы то ни было', 'как вам известно', 'как видите', 'как видишь', 'как видно', 'как водится', 'как всегда', 'как выяснилось', 'как выясняется', 'как говорилось', 'как говорится', 'как говорят', 'как знать', 'как известно', 'как исключение', 'как на заказ', 'как назло', 'как например', 'как нарочно', 'как ни говори', 'как ни говорите', 'как ни странно', 'как обычно', 'как оказалось', 'как оказывается', 'как пм', 'как по заказу', 'как полагается', 'как положено', 'как правило', 'как принято', 'как принято говорить', 'как сказано', 'как сказать', 'как следствие', 'как хотите', 'как хочешь', 'как это ни странно', 'к вашему сведению', 'к несчастью', 'ко всему прочему', 'к огорчению', 'конечно', 'коротко говоря', 'короче', 'короче говоря', 'к примеру', 'к примеру сказать', 'к прискорбию', 'к радости', 'к радости своей', 'кроме всего прочего', 'кроме того', 'кроме этого', 'кроме шуток', 'к слову', 'к слову сказать', 'к сожалению', 'кстати', 'кстати говоря', 'кстати сказать', 'к стыду', 'к стыду своему', 'к счастью', 'к твоему сведению', 'к удивлению', 'к ужасу', 'к чести', 'легко сказать', 'лучше', 'лучше сказать', 'мало сказать', 'мало того', 'между нами', 'между нами говоря', 'между прочим', 'может', 'может быть', 'может статься', 'можно подумать', 'можно сказать', 'мол', 'мягко выражаясь', 'мягко говоря', 'на беду', 'на ваш взгляд', 'наверно', 'наверное', 'надеюсь', 'надо быть', 'надо думать', 'надо полагать', 'называется', 'наконец', 'на мой взгляд', 'на несчастье', 'наоборот', 'на первый взгляд', 'например', 'напротив', 'на самом деле', 'на счастье', 'на твой взгляд', 'натурально', 'на худой конец', 'небось', 'несомненно', 'нет слов', 'нечего сказать', 'ничего не скажешь', 'но кроме того', 'но вообще-то', 'однако', 'однако же', 'одним словом', 'оказывается', 'определенно', 'откровенно', 'откровенно говоря', 'откровенно сказать', 'очевидно', 'по-вашему', 'по вашему мнению', 'поверите ли', 'поверишь ли', 'по-видимому', 'по видимости', 'по всей вероятности', 'по всей видимости', 'по данным', 'поди', 'подумать только','плиз','пожалуй', 'пожалуйста', 'по замыслу', 'позволь', 'позвольте', 'по идее', 'по-ихнему', 'по крайней мере', 'положим', 'положимте', 'получается', 'помилуй', 'помилуйте', 'помимо всего', 'помимо всего прочего', 'помимо того', 'помимо этого', 'по мне', 'по мнению', 'помнится', 'по-моему', 'по моему мнению', 'по-нашему', 'понятно', 'понятное дело', 'по обыкновению', 'по обычаю', 'по определению', 'по правде', 'по правде говоря', 'по правде сказать', 'по преданию', 'по прогнозам', 'попросту говоря', 'попросту сказать', 'по сведениям', 'по своему обыкновению', 'по словам', 'по слухам', 'по совести', 'по совести говоря', 'по совести сказать', 'по сообщению', 'по сообщениям', 'по справедливости', 'по справедливости говоря', 'по сути', 'по сути дела', 'по сути говоря', 'по существу', 'по существу говоря', 'по счастью', 'по-твоему', 'по твоему мнению', 'похоже', 'по чести говоря', 'по чести признаться', 'по чести сказать', 'почитай', 'правду говоря', 'правду сказать', 'правильнее', 'правильнее говоря', 'правильнее сказать', 'право', 'право слово', 'предположим', 'предположительно', 'представь', 'представь себе', 'представьте', 'представьте себе', 'прежде всего', 'признаться', 'признаться сказать', 'признаюсь', 'примерно', 'против обыкновения', 'проще говоря', 'проще сказать', 'разумеется', 'само собой', 'само собой разумеется', 'с вашего позволения', 'с вашего разрешения', 'сверх того', 'с другой стороны', 'серьезно', 'скажем', 'сказать по правде', 'сказать по совести', 'сказать по чести', 'скорее', 'скорее всего', 'слава богу', 'следовательно', 'слов нет', 'словом', 'случаем', 'случайно', 'слыхать', 'слышно', 'слышь', 'слышь ты', 'с моей точки зрения', 'собственно', 'собственно говоря', 'с одной стороны', 'соответственно', 'со своей стороны', 'с позволения сказать', 'спрашивается', 'стало быть', 'с твоего позволения', 'с твоего разрешения', 'с точки зрения', 'строго говоря', 'судя по всему', 'так', 'таким образом', 'так или иначе', 'так сказать', 'точнее', 'точнее говоря', 'точнее сказать', 'факт', 'хорошо', 'чай', 'часом', 'чего доброго', 'что и говорить', 'что называется', 'что ни говори', 'что ни говорите', 'шутка ли', 'шутка ли сказать', 'шутка сказать', 'ясное дело','здравствуйте', 'привет', 'здрасте','хай','могу','можем','скажите','смогу','сможем']
quest_words = ['кто','что','кого', 'чего','кому', 'чему','кого','как','что','кем', 'чем','где','откуда','отчего','почему','докуда','каков','какой','куда']
abbrev_dict = {'абл': 'аблатив', 'академ': 'академический отпуск', 'абс': 'абсолютный', 'абх': 'абхазский', 'авар': 'аварский', 'авг': 'август', 'австр': 'австрийский', 'австрал': 'австралийский', 'авт': 'автономный', 'адж': 'аджарский', 'адм': 'административный', 'азерб': 'азербайджанский', 'азиат': 'азиатский', 'акк': 'аккузатив', 'акц': 'акционерный', 'алб': 'албанский', 'алг': 'алгебраический', 'алж': 'алжирский', 'алт': 'алтайский', 'алф': 'алфавитный', 'альп': 'альпийский', 'ам': 'аттометр', 'а/м': 'автомашина', 'амер': 'американский', 'анат': 'анатомический', 'англ': 'английский', 'ангол': 'ангольский', 'антич': 'античный', 'а/о': 'акционерное общество', 'ап': 'апостол; апп апостолы', 'а/п': 'аэропорт', 'апр': 'апрель, апрельский', 'араб': 'арабский', 'арам': 'арамейский', 'аргент': 'аргентинский', 'арифм': 'арифметика, арифметический', 'арм': 'армянский', 'арх': 'архитектурный', 'а/т': 'автотранспорт', 'атм': 'атмосферный', 'афг': 'афганский', 'афр': 'африканский', 'б': 'байт', 'быв': 'бывший', 'балк': 'балкарский', 'балт': 'балтийский', 'башк': 'башкирский', 'бельг': 'бельгийский', 'бзн': 'бензин', 'биогр': 'биографический', 'биол': 'биологический', 'б-ка': 'библиотека', 'болг': 'болгарский', 'болив': 'боливийский', 'больн': 'больной', 'бот': 'ботанический', 'браз': 'бразильский', 'брет': 'бретонский', 'брит': 'британский', 'б/у': 'бывший в употреблении', 'буд': 'будущее время', 'бюдж': 'бюджетный', 'вдхр': 'водохранилище', 'венг': 'венгерский', 'вет': 'ветеринарный', 'визант': 'византийский', 'вин': 'винительный падеж', 'вкз': 'вокзал', 'вкл': 'включительно', 'в/с': 'высший сорт', 'вс': 'воскресенье', 'выкл': 'выключение', 'г': 'грамм', 'га': 'гектар', 'Гб': 'гигабайт', 'Гбайт/с': 'гигабайт в секунду', 'Гбит': 'гигабит', 'Гбит/с': 'гигабит в секунду', 'гг': 'годы', 'геогр': 'географический', 'геод': 'геодезический', 'геол': 'геологический', 'геом': 'геометрический', 'герм': 'германский', 'груз': 'грузинский', 'даг': 'дагестанский', 'дат': 'датский', 'дБ': 'децибел', 'действ': 'действительный', 'дек': 'декабрь', 'дер': 'деревня', 'дес': 'л десертная ложка', 'д-з': 'диагноз', 'диал': 'диалектный', 'диам': 'диаметр', 'див': 'дивизия', 'диз': 'дизель', 'дисс': 'диссертация', 'дист': 'дистиллированный', 'дифф': 'дифференциальный', 'д/к': 'Дворец культуры', 'дкг': 'декаграмм', 'дкл': 'декалитр', 'дкм': 'декаметр', 'дл': 'длина', 'дм': 'дециметр', 'долл': 'доллар', 'доп': 'дополнительный', 'доц': 'доцент', 'драм': 'драматический', 'д/с': 'детский сад', 'д/ф': 'документальный фильм', 'евр': 'европейский', 'егип': 'египетский', 'ед': 'единица', 'ежедн': 'ежедневный', 'ежемес': 'ежемесячный', 'еженед': 'еженедельный', 'зав': 'заведующий', 'з/о': 'заочное отделение', 'им': 'имени', 'инд': 'индийский', 'индонез': 'индонезийский', 'инж': 'инженерный', 'иностр': 'иностранный', 'инстр': 'инструментальный', 'инт': 'интегральный', 'ирак': 'иракский', 'иран': 'иранский', 'ирл': 'ирландский', 'ирон': 'иронический', 'иск-во': 'искусство', 'ист': 'исторический', 'исх': 'исходный', 'итал': 'итальянский', 'кил': 'кило', 'кан': 'канадский', 'кг': 'килограмм', 'км/с': 'километр в секунду', 'км/ч': 'километр в час', 'книжн': 'книжное', 'кооп': 'кооперативный', 'кор': 'корейский', 'ко эф ф': 'ко эф фициент', 'к-рый': 'который', 'к/ст': 'киностудия', 'кт': 'килотонна', 'к/т': 'кинотеатр', 'куб': 'кубический', 'к/ф': 'кинофильм', 'кэВ': 'килоэлектронвольт', 'л': 'литр', 'лтш': 'латышский', 'лат': 'латинский', 'мат': 'материальный', 'м': 'метр', 'междунар': 'международный', 'мекс': 'мексиканский', 'мес': 'месяц', 'мех': 'механический', 'мин': 'минимальный', 'мин-во': 'министерство', 'мк': 'микрон', 'мкА': 'микроампер', 'мл': 'миллилитр', 'мм': 'миллиметр', 'наб': 'набережная', 'наг': 'нагорье', 'наз': 'называемый', 'назв': 'название', 'наиб': 'наибольший', 'наим': 'наименьший', 'нар': 'народный', 'нас': 'население', 'наст': 'настоящий', 'науч': 'научный', 'нац': 'национальный', 'негр': 'негритянский', 'нед': 'неделя', 'неизв': 'неизвестный', 'нем': 'немецкий', 'неодуш': 'неодушевленный', 'неперех': 'непереходный', 'нер-во': 'неравенство', 'неск': 'несколько', 'неуд': 'неудовлетворительно', 'нидерл': 'нидерландский', 'нов': 'новый', 'новогреч': 'новогреческий', 'новозел': 'новозеландский', 'норв': 'норвежский', 'норм': 'нормальный', 'нояб': 'ноябрь', 'одуш': 'одушевленный', 'отл': 'отлично', 'офиц': 'официальный', 'оч': 'очень', 'первонач': 'первоначальный', 'перс': 'персидский', 'пищ': 'пищевой', 'пк': 'пиксел', 'пн': 'понедельник', 'полит': 'политика, политический', 'правосл': 'православный', 'прич': 'причастие', 'просп': 'проспект', 'прост': 'просторечный', 'проф': 'профессиональный', 'прош': 'прошедшее время', 'психол': 'психологический', 'пт': 'пятница', 'руб': 'рубль', 'рад': 'радиан', 'т': 'тонна', 'ред': 'редакционный', 'реж': 'режиссер', 'религ': 'религиозный', 'рем': 'ремонтный', 'респ': 'республиканский', 'р-н': 'район', 'росс': 'российский', 'р-р': 'раствор', 'р/с': 'радиостанция', 'рукоп': 'рукопись, рукописный', 'рум': 'румынский', 'рус': 'русский', 'сиб': 'сибирский', 'соц': 'социальный', 'симм': 'симметричный', 'синт': 'синтетический', 'сир': 'сирийский', 'сказ': 'сказуемое', 'сканд': 'скандинавский', 'СПб': 'Санкт-тербург', 'спец': 'специальный', 'спорт': 'спортивный', 'страд': 'страдательный', 'стр-во': 'строительство', 'сут': 'сутки', 'суфф': 'суффикс', 'сущ': 'существительное', 'телеф': 'телефонный', 'теор': 'теоретический', 'техн': 'технический', 'тир': 'тираж', 'т.к': 'так как', 'т.е': 'то есть', 'торг': 'торговый', 'трансп': 'транспортный', 'триг': 'тригонометрический', 'узб': 'узбекский', 'ул': 'улица', 'февр': 'февраль', 'филол': 'филологический', 'филос': 'философский', 'фин': 'финансовый', 'финл': 'финляндский', 'фио': 'фамилия, имя, отчество', 'ф-ла': 'формула', 'флам': 'фламандский', 'хар-ка': 'характеристика', 'хоз-во': 'хозяйство', 'х/ф': 'художественный фильм', 'центр': 'центральный', 'чел': 'человек', 'ч/б': 'черно-белый', 'чт': 'четверг', 'чув': 'чувашский', 'экон': 'экономический', 'тыс': 'тысяч'}

# class for text preprocessing : replace word abbreviations, remove stop words and 
# some given words in replace_words, make spelling correction 
class TextPreProcessor:
  def __init__(self, propn_nouns=[],stop_words=stop_words, abbrev_dict=abbrev_dict):
    self.stop_words = stop_words
    self.abbrev_dict = abbrev_dict
    self.propn_nouns = propn_nouns
    self.splitter = Separatrice()

  def replace(self,text):
    for propn_noun in self.propn_nouns:
      patterns = [propn_noun.upper(), propn_noun.capitalize(), propn_noun]
      for pattern in patterns:
        text = re.sub('^'+pattern + ' ', " '" + propn_noun+"' " ,text)
        text = re.sub(' ' +pattern + '$', " '" + propn_noun+"'" ,text)
        text = re.sub(' ' + pattern + '[ |!|,|.|?|:|;]', " '" + propn_noun+"' " ,text)

    for key in self.abbrev_dict.keys():
      abbrev = self.abbrev_dict[key]
      text = re.sub('^'+key.upper() + ' ',abbrev.capitalize()+" " ,text)
      text = re.sub('^'+key.capitalize() + ' ',abbrev.capitalize()+" " ,text)
      text = re.sub('^'+key + ' ', abbrev + ' ',text)
      text = re.sub(' ' + key + '$',abbrev + ' ',text)
      text = re.sub(' ' + key + '[ |!|,|.|?|:|;]', " " + abbrev+" " ,text)

    return text


  def run(self,text,exclude_stop_words=True):
    text = text[0].upper() + text[1:]
    text = ' '.join(text.split())

    if 'ё' in text:
      text = text.replace('ё','е')

    text = self.replace(text)

    if (exclude_stop_words == True):
      text = re.sub(' | '.join(stop_words), ' ', text)
      text = re.sub('|^'.join(stop_words), '', text)
      text = re.sub('$|'.join(stop_words), '', text)

    temp = ' '.join([t.capitalize() + ". " for t in self.splitter.into_clauses(text)])
    temp = temp.split()
    for i in range(len(temp)):
      if temp[i] in ['.','?','!'] and i+1 < len(temp):
        temp[i+1] = temp[i+1].capitalize()

    result = []
    for w in temp:
      if re.findall('\d{5}|\d{6}',w) != []:
        w = "'" + w + "'"
      result.append(w)

    result = ' '.join(result)
    if result[-1] not in ['.','?','!']:
      result = result + '.'
    return result
