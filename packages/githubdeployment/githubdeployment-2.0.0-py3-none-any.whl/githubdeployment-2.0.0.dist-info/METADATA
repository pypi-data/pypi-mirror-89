Metadata-Version: 2.1
Name: githubdeployment
Version: 2.0.0
Summary: Simple tool for auto-deployment
Home-page: https://github.com/komron-m/deployment
Author: Komron Miralizoda
Author-email: miralizoda.komron@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown

Automate adding `manually ssh-key, cleaning directory from untracked files, pulling from remote` etc... After pulling
easily configure `post steps`. This can be piped into your CI/CD pipeline. Tested on python 3.x

### Getting started

```bash
# simply clone repo and cd into cloned repo
git clone git@github.com:komron-m/deployment.git && cd deployment
# after cloning copy test_config.json and set all actions and `keys`
cp tests/test_config.json /path/to/project_conf.json
# run script with one argument
python src/main.py /path/to/project_conf.json
```

### Configs

```json
{
  "keys": {
    "remote": "origin",
    "repository_root": "/var/www/awesome-project",
    "ssh_key": "/opt/deployment/id_rsa",
    "working_branch": "master"
  },
  "actions": [
    {
      "description": "Install new dependencies",
      "exe": "composer install --ignore-platform-reqs --no-interaction"
    },
    ...
  ]
}
```

- `keys` are mandatory, make sure all permissions are set for files and directories.
- `actions` contain a list of action, where `description` is plain message for logging and `exe` is command that run
  right after `git pull ${remote} ${working_branch}`. All actions run as one `pipe`.


