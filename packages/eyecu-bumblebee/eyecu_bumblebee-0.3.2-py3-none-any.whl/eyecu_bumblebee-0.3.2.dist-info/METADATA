Metadata-Version: 2.1
Name: eyecu-bumblebee
Version: 0.3.2
Summary: Advanced pipelines for video datasets
Home-page: https://github.com/Eye-C-U/bumblebee/
License: MIT
Keywords: Video Processing,Dataset,numpy
Author: Oguz Vuruskaner
Author-email: ovuruska@outlook.com
Requires-Python: >=3.6,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: numpy (>=1.19.0,<2.0.0)
Requires-Dist: opencv-python (>=4.4.0,<5.0.0)
Project-URL: Repository, https://github.com/Eye-C-U/bumblebee/
Project-URL: issues, https://github.com/Eye-C-U/bumblebee/issues
Description-Content-Type: text/markdown

# Bumblebee

![Bumblebee image](./docs/bumblebee.png)

## Install

```
pip install eyecu_bumblebee
```

## Our Website

[EyeCU Vision](https://eyecuvision.com/) \
[EyeCU Future](https://eyecufuture.com/) 


## Example Pipeline

```python
from bumblebee import *

if __name__ == "__main__":
    
    VIDEO_PATH = "/path/to/video.mp4"

    # Create a source
    file_stream = sources.FileStream(VIDEO_PATH)

    # Add an effect
    goto = effects.GoTo(file_stream)

    # Add some transformers
    data = transformers.GrayScale(file_stream)
    data = transformers.Normalization(data)

    END_OF_VIDEO = file_stream.get_duration()
    goto(END_OF_VIDEO)

    # Create a dataset
    single_frame = datasets.SingleFrame(data)

    last_frame = single_frame.read()

```

## Architecture Diagram

![Architecture](docs/bumblebee_arch_diagram.png)


