# -*- coding: utf-8 -*-

"""
    weather_apiiii

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import weather_apiiii.models.coord
import weather_apiiii.models.main
import weather_apiiii.models.wind
import weather_apiiii.models.sys
import weather_apiiii.models.rain
import weather_apiiii.models.clouds
import weather_apiiii.models.weather

class List(object):

    """Implementation of the 'List' model.

    TODO: type model description here.

    Attributes:
        id (int): TODO: type description here.
        name (string): TODO: type description here.
        coord (Coord): TODO: type description here.
        main (Main): TODO: type description here.
        dt (int): TODO: type description here.
        wind (Wind): TODO: type description here.
        sys (Sys): TODO: type description here.
        rain (Rain): TODO: type description here.
        snow (string): TODO: type description here.
        clouds (Clouds): TODO: type description here.
        weather (list of Weather): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "name":'name',
        "coord":'coord',
        "main":'main',
        "dt":'dt',
        "wind":'wind',
        "sys":'sys',
        "clouds":'clouds',
        "weather":'weather',
        "rain":'rain',
        "snow":'snow'
    }

    def __init__(self,
                 id=None,
                 name=None,
                 coord=None,
                 main=None,
                 dt=None,
                 wind=None,
                 sys=None,
                 clouds=None,
                 weather=None,
                 rain=None,
                 snow=None):
        """Constructor for the List class"""

        # Initialize members of the class
        self.id = id
        self.name = name
        self.coord = coord
        self.main = main
        self.dt = dt
        self.wind = wind
        self.sys = sys
        self.rain = rain
        self.snow = snow
        self.clouds = clouds
        self.weather = weather


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        name = dictionary.get('name')
        coord = weather_apiiii.models.coord.Coord.from_dictionary(dictionary.get('coord')) if dictionary.get('coord') else None
        main = weather_apiiii.models.main.Main.from_dictionary(dictionary.get('main')) if dictionary.get('main') else None
        dt = dictionary.get('dt')
        wind = weather_apiiii.models.wind.Wind.from_dictionary(dictionary.get('wind')) if dictionary.get('wind') else None
        sys = weather_apiiii.models.sys.Sys.from_dictionary(dictionary.get('sys')) if dictionary.get('sys') else None
        clouds = weather_apiiii.models.clouds.Clouds.from_dictionary(dictionary.get('clouds')) if dictionary.get('clouds') else None
        weather = None
        if dictionary.get('weather') != None:
            weather = list()
            for structure in dictionary.get('weather'):
                weather.append(weather_apiiii.models.weather.Weather.from_dictionary(structure))
        rain = weather_apiiii.models.rain.Rain.from_dictionary(dictionary.get('rain')) if dictionary.get('rain') else None
        snow = dictionary.get('snow')

        # Return an object of this model
        return cls(id,
                   name,
                   coord,
                   main,
                   dt,
                   wind,
                   sys,
                   clouds,
                   weather,
                   rain,
                   snow)


