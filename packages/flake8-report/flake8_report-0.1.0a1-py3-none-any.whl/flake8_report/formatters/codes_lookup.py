"""Flake8 codes lookup"""


def lookup_code_title(code: str, default: str = None) -> str:
    """Lookup the message for a code.

    :param code: The code to lookup
    :param default: Default message if not found
    :return: Error code message text
    """
    not_found = default or "(Error code description not found)"

    return error_codes.get(code) or not_found


error_codes = {
    "C901": "Function is too complex",
    "D100": "Missing docstring in public module",
    "D101": "Missing docstring in public class",
    "D102": "Missing docstring in public method",
    "D103": "Missing docstring in public function",
    "D104": "Missing docstring in public package",
    "D105": "Missing docstring in magic method",
    "D106": "Missing docstring in public nested class",
    "D107": "Missing docstring in __init__",
    "D200": "One-line docstring should fit on one line with quotes",
    "D201": "No blank lines allowed before function docstring",
    "D202": "No blank lines allowed after function docstring",
    "D203": "1 blank line required before class docstring",
    "D204": "1 blank line required after class docstring",
    "D205": "1 blank line required between summary line and description",
    "D206": "Docstring should be indented with spaces, not tabs",
    "D207": "Docstring is under-indented",
    "D208": "Docstring is over-indented",
    "D209": "Multi-line docstring closing quotes should be on a separate line",
    "D210": "No whitespaces allowed surrounding docstring text",
    "D211": "No blank lines allowed before class docstring",
    "D212": "Multi-line docstring summary should start at the first line",
    "D213": "Multi-line docstring summary should start at the second line",
    "D214": "Section is over-indented",
    "D215": "Section underline is over-indented",
    "D300": "Use \"\"\"triple double quotes\"\"\"",
    "D301": "Use r\"\"\" if any backslashes in a docstring",
    "D302": "Use u\"\"\" for Unicode docstrings",
    "D400": "First line should end with a period",
    "D401": "First line should be in imperative mood; try rephrasing",
    "D402": "First line should not be the function's \"signature\"",
    "D403": "First word of the first line should be properly capitalized",
    "D404": "First word of the docstring should not be 'This'",
    "D405": "Section name should be properly capitalized",
    "D406": "Section name should end with a newline",
    "D407": "Missing dashed underline after section",
    "D408": "Section underline should be in the line following the section's name",
    "D409": "Section underline should match the length of its name",
    "D410": "Missing blank line after section",
    "D411": "Missing blank line before section",
    "D412": "No blank lines allowed between a section header and its content",
    "D413": "Missing blank line after last section",
    "D414": "Section has no content",
    "D415": "First line should end with a period, question mark, or exclamation point",
    "D416": "Section name should end with a colon",
    "D417": "Missing argument descriptions in the docstring",
    "D418": "Function/ Method decorated with @overload shouldn't contain a docstring",
    "E117": "over-indented",
    "E121": "continuation line under-indented for hanging indent",
    "E123": "closing bracket does not match indentation of opening bracket's line",
    "E124": "closing bracket does not match indentation of opening bracket's line",
    "E126": "continuation line over-indented for hanging indent",
    "E128": "continuation line under-indented for visual indent",
    "E203": "whitespace before ','",
    "E225": "missing whitespace around operator",
    "E226": "missing whitespace around arithmetic operator",
    "E231": "missing whitespace after ','",
    "E241": "multiple spaces after ','",
    "E261": "at least two spaces before inline comment",
    "E265": "block comment should start with '# '",
    "E303": "too many blank lines",
    "E305": "expected 2 blank lines after class or function definition",
    "E402": "module level import not at top of file",
    "E501": "line too long",
    "E711": "comparison to None should be 'if cond is None:'",
    "E722": "do not use bare 'except'",
    "E731": "do not assign a lambda expression, use a def",
    "E741": "ambiguous variable name",
    "F401": "module imported but unused",
    "F402": "import 'module' from line 'N' shadowed by loop variable",
    "F403": "'from 'module' import *' used; unable to detect undefined names",
    "F404": "future import(s) 'name' after other statements",
    "F405": "'name' may be undefined, or defined from star imports: 'module'",
    "F406": "'from 'module' import *' only allowed at module level",
    "F407": "an undefined '__future__' feature name was imported",
    "F501": "invalid '%' format literal",
    "F502": "'%' format expected mapping but got sequence",
    "F503": "'%' format expected sequence but got mapping",
    "F504": "'%' format unused named arguments",
    "F505": "'%' format missing named arguments",
    "F506": "'%' format mixed positional and named arguments",
    "F507": "'%' format mismatch of placeholder and argument count",
    "F508": "'%' format with '*' specifier requires a sequence",
    "F509": "'%' format with unsupported format character",
    "F521": "'.format(...)' invalid format string",
    "F522": "'.format(...)' unused named arguments",
    "F523": "'.format(...)' unused positional arguments",
    "F524": "'.format(...)' missing argument",
    "F525": "'.format(...)' mixing automatic and manual numbering",
    "F541": "f-string without any placeholders",
    "F601": "dictionary key 'name' repeated with different values",
    "F602": "dictionary key variable 'name' repeated with different values",
    "F621": "too many expressions in an assignment with star-unpacking",
    "F622": "two or more starred expressions in an assignment '(a, *b, *c = d)'",
    "F631": "assertion test is a tuple, which is always 'True'",
    "F632": "use '==/!=' to compare 'str', 'bytes', and 'int' literals",
    "F633": "use of '>>' is invalid with 'print' function",
    "F634": "if test is a tuple, which is always 'True'",
    "F701": "a 'break' statement outside of a 'while' or 'for' loop",
    "F702": "a 'continue' statement outside of a 'while' or 'for' loop",
    "F703": "a 'continue' statement in a 'finally' block in a loop",
    "F704": "a 'yield' or 'yield from' statement outside of a function",
    "F705": "a 'return' statement with arguments inside a generator",
    "F706": "a 'return' statement outside of a function/method",
    "F707": "an 'except:' block as not the last exception handler",
    "F721": "syntax error in doctest",
    "F722": "syntax error in forward annotation",
    "F723": "syntax error in type comment",
    "F811": "redefinition of unused 'name' from line 'N'",
    "F812": "list comprehension redefines 'name' from line 'N'",
    "F821": "undefined name 'name'",
    "F822": "undefined name 'name' in '__all__'",
    "F823": "local variable 'name' ... referenced before assignment",
    "F831": "duplicate argument 'name' in function definition",
    "F841": "local variable 'name' is assigned to but never used",
    "F901": "'raise NotImplemented' should be 'raise NotImplementedError'",
    "W291": "trailing whitespace",
    "W292": "no newline at end of file",
    "W293": "blank line contains whitespace",
    "W391": "blank line at end of file",
    "W503": "line break before binary operator",
    "W504": "line break after binary operator",
    "W505": "doc line too long",
    "W605": "invalid escape sequence",
}
