# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from cogneed_protos.ai.cogneed.api.audio import common_pb2 as cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_common__pb2
from cogneed_protos.ai.cogneed.api.audio.stream import audio_stream_pb2 as cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_stream_dot_audio__stream__pb2
from cogneed_protos.ai.cogneed.api.audio import web_middleware_pb2 as cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2
from cogneed_protos.ai.cogneed.api import common_pb2 as cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_common__pb2


class WebAudioServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.start = channel.unary_unary(
        '/ai.cogneed.api.audio.web.WebAudioService/start',
        request_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.StartWebSessionRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.StartWebSessionResponse.FromString,
        )
    self.audio = channel.unary_unary(
        '/ai.cogneed.api.audio.web.WebAudioService/audio',
        request_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.WebAudioRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_common__pb2.AckResponse.FromString,
        )
    self.subscribe = channel.unary_stream(
        '/ai.cogneed.api.audio.web.WebAudioService/subscribe',
        request_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.SubscribeRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_common__pb2.DetectionResponse.FromString,
        )
    self.unstack = channel.unary_unary(
        '/ai.cogneed.api.audio.web.WebAudioService/unstack',
        request_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.UnstackRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.UnstackResponse.FromString,
        )


class WebAudioServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def start(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def audio(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def subscribe(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def unstack(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WebAudioServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'start': grpc.unary_unary_rpc_method_handler(
          servicer.start,
          request_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.StartWebSessionRequest.FromString,
          response_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.StartWebSessionResponse.SerializeToString,
      ),
      'audio': grpc.unary_unary_rpc_method_handler(
          servicer.audio,
          request_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.WebAudioRequest.FromString,
          response_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_common__pb2.AckResponse.SerializeToString,
      ),
      'subscribe': grpc.unary_stream_rpc_method_handler(
          servicer.subscribe,
          request_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.SubscribeRequest.FromString,
          response_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_common__pb2.DetectionResponse.SerializeToString,
      ),
      'unstack': grpc.unary_unary_rpc_method_handler(
          servicer.unstack,
          request_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.UnstackRequest.FromString,
          response_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.UnstackResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.cogneed.api.audio.web.WebAudioService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class LiveInsightsServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StartSession = channel.unary_unary(
        '/ai.cogneed.api.audio.web.LiveInsightsService/StartSession',
        request_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.StartWebRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.StartWebSessionResponse.FromString,
        )
    self.SendAudio = channel.unary_unary(
        '/ai.cogneed.api.audio.web.LiveInsightsService/SendAudio',
        request_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_stream_dot_audio__stream__pb2.SendAudioRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_common__pb2.OptionalDetectionResponse.FromString,
        )
    self.EndSession = channel.unary_unary(
        '/ai.cogneed.api.audio.web.LiveInsightsService/EndSession',
        request_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.EndSessionRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_common__pb2.AckResponse.FromString,
        )


class LiveInsightsServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StartSession(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendAudio(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EndSession(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LiveInsightsServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StartSession': grpc.unary_unary_rpc_method_handler(
          servicer.StartSession,
          request_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.StartWebRequest.FromString,
          response_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.StartWebSessionResponse.SerializeToString,
      ),
      'SendAudio': grpc.unary_unary_rpc_method_handler(
          servicer.SendAudio,
          request_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_stream_dot_audio__stream__pb2.SendAudioRequest.FromString,
          response_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_common__pb2.OptionalDetectionResponse.SerializeToString,
      ),
      'EndSession': grpc.unary_unary_rpc_method_handler(
          servicer.EndSession,
          request_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_audio_dot_web__middleware__pb2.EndSessionRequest.FromString,
          response_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_common__pb2.AckResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.cogneed.api.audio.web.LiveInsightsService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
