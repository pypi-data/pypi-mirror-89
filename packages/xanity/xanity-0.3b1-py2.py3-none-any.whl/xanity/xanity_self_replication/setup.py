
###############################################################
##                                                           ##
##     This file was automatically generated by xanity       ##
##          and is intended only for use by xanity.          ##
##                                                           ##
##############################################################






from setuptools import setup
import os
import re
import inspect
import shutil
from fnmatch import fnmatch


long_description = "xanity is a tool for managing multiple experiments, analysies, parameter sets'" \
                   "the data they create, and the analyses needed to make sense of them."

# get the full path to this file :
thispath = os.path.abspath(os.path.realpath(os.path.split(inspect.stack()[0][1])[0]))

# read actual long description from /README.md
if os.path.exists(os.path.join(thispath, 'README.md')):
    with open(os.path.join(thispath, 'README.md'), 'r') as description_file:
        long_description = description_file.read()

# read xanity version from /./xanity/__init__.py :                                                
with open(os.path.join(thispath, './xanity/__init__.py'), 'r') as initfile:                       
    for line in initfile.readlines():
        scraped = re.search(r'\s*__version__\s*=\s*[\"\'](\S+)[\"\']', line)
        if scraped:
            version = scraped.group(1).strip('\'\"').strip()
            break


setup(

    name="xanity",
    version=str(version),

    python_requires='>=2.7',
    install_requires=['dill', 'pandas', 'pyparsing', 'cloudpickle', 'ipdb'],
    # setup_requires=["pytest-runner"],   ## this seems to be deprecated
    tests_require=["pytest"],
    extras_require={
            'dev': [
                'pytest',
                'tox',
            ]
        },

    packages={'xanity': './xanity'},                                                              

    ######################################################
    ##                                                  ##
    ##  Notes regarding autogen script installation:    ##
    ##                                                  ##
    ####################################################

    #   if the script is python, the interpreter will become static at install time (done by setuptools)
    #   it will be generated with the full path to the python interpreter used to run the (pip) which is installing it

    #   if the script is SHELL, it will just be copied into the relevant /bin path
    #   (this provides an opportunity to intervene and select a python interpreter)

    #   the python behavior leads to problems with Debian's Pip's default --user installation method.
    #   in this case, the script is installed in ~/.local/bin with a hard interpreter path and is visible
    #   to  all conda environments by default. Leading to problems running xanity with different python distros in
    #   different conda envs.

    #   Python interpreters in envs can be forced to ignore USER_SITE python libraries by setting:
    #       USER_SITE = None  # or USER_SITE = False
    #   in the relevant .../lib/site.py file.
    #   This seems to be the best approach to managing this.
    #
    #   And so, every python and every xanity will be completely independent. (Python) scripts or entry_points
    #   (also pythonic) can be autogenerated upon manual installation of xanity into each conda env it creates.


    # scripts=[
    #     './xanity/bin/xanity',                                                                  
    # ],


    entry_points={
        'console_scripts': [
            'xanity = xanity.__main__:main'
        ],
        'gui_scripts': [],
    },

    include_package_data=True,

    # metadata to display on PyPI
    author="Barry Muldrey",
    author_email="barry@muldrey.net",
    description="Package for managing experiments and analyses",
    long_description=long_description,
    long_description_content_type='text/markdown',
    license="GPLv3",
    keywords="scientific experiements analysis data management",
    url="http://gitlab.com/bjmuld/xanity/",   # project home page, if any
    project_urls={
        "Bug Tracker": "https://gitlab.com/bjmuld/xanity/issues",
        "Documentation": "https://gitlab.com/bjmuld/xanity",
    },

    classifiers=[
        'Development Status :: 3 - Alpha',
        'Environment :: Console',
        'Intended Audience :: End Users/Desktop',
        'Intended Audience :: Developers',
        'Intended Audience :: Science/Research',
        'Intended Audience :: Education',
        'License :: OSI Approved :: GNU Affero General Public License v3',
        'Operating System :: MacOS',
        'Operating System :: Microsoft :: Windows',
        'Operating System :: POSIX',
        'Natural Language :: English',
        'Programming Language :: Python',
        'Topic :: Scientific/Engineering',
        'Topic :: Scientific/Engineering :: Visualization',
        'Topic :: Utilities',
    ],
)
