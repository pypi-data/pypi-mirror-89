# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import lnd_pb2 as proto_dot_lnd__pb2
from proto import squeak_admin_pb2 as proto_dot_squeak__admin__pb2


class SqueakAdminStub(object):
    """Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LndGetInfo = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndGetInfo',
                request_serializer=proto_dot_lnd__pb2.GetInfoRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.GetInfoResponse.FromString,
                )
        self.LndWalletBalance = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndWalletBalance',
                request_serializer=proto_dot_lnd__pb2.WalletBalanceRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.WalletBalanceResponse.FromString,
                )
        self.LndNewAddress = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndNewAddress',
                request_serializer=proto_dot_lnd__pb2.NewAddressRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.NewAddressResponse.FromString,
                )
        self.LndListChannels = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndListChannels',
                request_serializer=proto_dot_lnd__pb2.ListChannelsRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.ListChannelsResponse.FromString,
                )
        self.LndPendingChannels = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndPendingChannels',
                request_serializer=proto_dot_lnd__pb2.PendingChannelsRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.PendingChannelsResponse.FromString,
                )
        self.LndGetTransactions = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndGetTransactions',
                request_serializer=proto_dot_lnd__pb2.GetTransactionsRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.TransactionDetails.FromString,
                )
        self.LndListPeers = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndListPeers',
                request_serializer=proto_dot_lnd__pb2.ListPeersRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.ListPeersResponse.FromString,
                )
        self.LndConnectPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndConnectPeer',
                request_serializer=proto_dot_lnd__pb2.ConnectPeerRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.ConnectPeerResponse.FromString,
                )
        self.LndDisconnectPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndDisconnectPeer',
                request_serializer=proto_dot_lnd__pb2.DisconnectPeerRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.DisconnectPeerResponse.FromString,
                )
        self.LndOpenChannelSync = channel.unary_unary(
                '/squeaknode.SqueakAdmin/LndOpenChannelSync',
                request_serializer=proto_dot_lnd__pb2.OpenChannelRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.ChannelPoint.FromString,
                )
        self.LndCloseChannel = channel.unary_stream(
                '/squeaknode.SqueakAdmin/LndCloseChannel',
                request_serializer=proto_dot_lnd__pb2.CloseChannelRequest.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.CloseStatusUpdate.FromString,
                )
        self.LndSubscribeChannelEvents = channel.unary_stream(
                '/squeaknode.SqueakAdmin/LndSubscribeChannelEvents',
                request_serializer=proto_dot_lnd__pb2.ChannelEventSubscription.SerializeToString,
                response_deserializer=proto_dot_lnd__pb2.ChannelEventUpdate.FromString,
                )
        self.CreateSigningProfile = channel.unary_unary(
                '/squeaknode.SqueakAdmin/CreateSigningProfile',
                request_serializer=proto_dot_squeak__admin__pb2.CreateSigningProfileRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.CreateSigningProfileReply.FromString,
                )
        self.CreateContactProfile = channel.unary_unary(
                '/squeaknode.SqueakAdmin/CreateContactProfile',
                request_serializer=proto_dot_squeak__admin__pb2.CreateContactProfileRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.CreateContactProfileReply.FromString,
                )
        self.GetSigningProfiles = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSigningProfiles',
                request_serializer=proto_dot_squeak__admin__pb2.GetSigningProfilesRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSigningProfilesReply.FromString,
                )
        self.GetContactProfiles = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetContactProfiles',
                request_serializer=proto_dot_squeak__admin__pb2.GetContactProfilesRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetContactProfilesReply.FromString,
                )
        self.GetSqueakProfile = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSqueakProfile',
                request_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileReply.FromString,
                )
        self.GetSqueakProfileByAddress = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSqueakProfileByAddress',
                request_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByAddressRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByAddressReply.FromString,
                )
        self.GetSqueakProfileByName = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSqueakProfileByName',
                request_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByNameRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByNameReply.FromString,
                )
        self.SetSqueakProfileFollowing = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SetSqueakProfileFollowing',
                request_serializer=proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingReply.FromString,
                )
        self.SetSqueakProfileSharing = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SetSqueakProfileSharing',
                request_serializer=proto_dot_squeak__admin__pb2.SetSqueakProfileSharingRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SetSqueakProfileSharingReply.FromString,
                )
        self.DeleteSqueakProfile = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DeleteSqueakProfile',
                request_serializer=proto_dot_squeak__admin__pb2.DeleteSqueakProfileRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DeleteSqueakProfileReply.FromString,
                )
        self.MakeSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/MakeSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.MakeSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.MakeSqueakReply.FromString,
                )
        self.GetSqueakDisplay = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSqueakDisplay',
                request_serializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
                )
        self.GetTimelineSqueakDisplays = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetTimelineSqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysReply.FromString,
                )
        self.GetAddressSqueakDisplays = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetAddressSqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.GetAddressSqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetAddressSqueakDisplaysReply.FromString,
                )
        self.GetAncestorSqueakDisplays = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetAncestorSqueakDisplays',
                request_serializer=proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysReply.FromString,
                )
        self.DeleteSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DeleteSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.DeleteSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DeleteSqueakReply.FromString,
                )
        self.CreatePeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/CreatePeer',
                request_serializer=proto_dot_squeak__admin__pb2.CreatePeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.CreatePeerReply.FromString,
                )
        self.GetPeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetPeer',
                request_serializer=proto_dot_squeak__admin__pb2.GetPeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetPeerReply.FromString,
                )
        self.GetPeers = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetPeers',
                request_serializer=proto_dot_squeak__admin__pb2.GetPeersRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetPeersReply.FromString,
                )
        self.SetPeerDownloading = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SetPeerDownloading',
                request_serializer=proto_dot_squeak__admin__pb2.SetPeerDownloadingRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SetPeerDownloadingReply.FromString,
                )
        self.SetPeerUploading = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SetPeerUploading',
                request_serializer=proto_dot_squeak__admin__pb2.SetPeerUploadingRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SetPeerUploadingReply.FromString,
                )
        self.DeletePeer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/DeletePeer',
                request_serializer=proto_dot_squeak__admin__pb2.DeletePeerRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.DeletePeerReply.FromString,
                )
        self.GetBuyOffers = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetBuyOffers',
                request_serializer=proto_dot_squeak__admin__pb2.GetBuyOffersRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetBuyOffersReply.FromString,
                )
        self.GetBuyOffer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetBuyOffer',
                request_serializer=proto_dot_squeak__admin__pb2.GetBuyOfferRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetBuyOfferReply.FromString,
                )
        self.SyncSqueaks = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SyncSqueaks',
                request_serializer=proto_dot_squeak__admin__pb2.SyncSqueaksRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SyncSqueaksReply.FromString,
                )
        self.SyncSqueak = channel.unary_unary(
                '/squeaknode.SqueakAdmin/SyncSqueak',
                request_serializer=proto_dot_squeak__admin__pb2.SyncSqueakRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.SyncSqueakReply.FromString,
                )
        self.PayOffer = channel.unary_unary(
                '/squeaknode.SqueakAdmin/PayOffer',
                request_serializer=proto_dot_squeak__admin__pb2.PayOfferRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.PayOfferReply.FromString,
                )
        self.GetSentPayments = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSentPayments',
                request_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentsRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentsReply.FromString,
                )
        self.GetSentPayment = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSentPayment',
                request_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentReply.FromString,
                )
        self.GetSqueakDetails = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSqueakDetails',
                request_serializer=proto_dot_squeak__admin__pb2.GetSqueakDetailsRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDetailsReply.FromString,
                )
        self.GetSentOffers = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetSentOffers',
                request_serializer=proto_dot_squeak__admin__pb2.GetSentOffersRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetSentOffersReply.FromString,
                )
        self.GetReceivedPayments = channel.unary_unary(
                '/squeaknode.SqueakAdmin/GetReceivedPayments',
                request_serializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsReply.FromString,
                )
        self.SubscribeReceivedPayments = channel.unary_stream(
                '/squeaknode.SqueakAdmin/SubscribeReceivedPayments',
                request_serializer=proto_dot_squeak__admin__pb2.SubscribeReceivedPaymentsRequest.SerializeToString,
                response_deserializer=proto_dot_squeak__admin__pb2.ReceivedPayment.FromString,
                )


class SqueakAdminServicer(object):
    """Interface exported by the server.
    """

    def LndGetInfo(self, request, context):
        """* sqkadmin: `lndgetinfo`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndWalletBalance(self, request, context):
        """* sqkadmin: `lndwalletbalance`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndNewAddress(self, request, context):
        """* sqkadmin: `lndnewaddress`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndListChannels(self, request, context):
        """* sqkadmin: `lndlistchannels`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndPendingChannels(self, request, context):
        """* sqkadmin: `lndpendingchannels`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndGetTransactions(self, request, context):
        """* sqkadmin: `lndgettransactions`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndListPeers(self, request, context):
        """* sqkadmin: `lndlistpeers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndConnectPeer(self, request, context):
        """* sqkadmin: `lndconnectpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndDisconnectPeer(self, request, context):
        """* sqkadmin: `lnddisconnectpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndOpenChannelSync(self, request, context):
        """* sqkadmin: `lndopenchannelsync`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndCloseChannel(self, request, context):
        """* sqkadmin: `lndclosechannel`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LndSubscribeChannelEvents(self, request, context):
        """* sqkadmin: `lndsubscribechannelevents`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSigningProfile(self, request, context):
        """* sqkadmin: `createsigningprofile`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContactProfile(self, request, context):
        """* sqkadmin: `createcontactprofile`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSigningProfiles(self, request, context):
        """* sqkadmin: `getsigningprofiles`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContactProfiles(self, request, context):
        """* sqkadmin: `getcontactprofiles`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqueakProfile(self, request, context):
        """* sqkadmin: `getsqueakprofile`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqueakProfileByAddress(self, request, context):
        """* sqkadmin: `getsqueakprofilebyaddress`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqueakProfileByName(self, request, context):
        """* sqkadmin: `getsqueakprofilebyname`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSqueakProfileFollowing(self, request, context):
        """* sqkadmin: `setsqueakprofilefollowing`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSqueakProfileSharing(self, request, context):
        """* sqkadmin: `setsqueakprofilesharing`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSqueakProfile(self, request, context):
        """* sqkadmin: `deletesqueakprofile`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeSqueak(self, request, context):
        """* sqkadmin: `makesqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqueakDisplay(self, request, context):
        """* sqkadmin: `getsqueakdisplay`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimelineSqueakDisplays(self, request, context):
        """* sqkadmin: `gettimelinesqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAddressSqueakDisplays(self, request, context):
        """* sqkadmin: `getaddresssqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAncestorSqueakDisplays(self, request, context):
        """* sqkadmin: `getancestorsqueakdisplays`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSqueak(self, request, context):
        """* sqkadmin: `deletesqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePeer(self, request, context):
        """* sqkadmin: `addpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPeer(self, request, context):
        """* sqkadmin: `getpeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPeers(self, request, context):
        """* sqkadmin: `getpeers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPeerDownloading(self, request, context):
        """* sqkadmin: `setpeerdownloading`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPeerUploading(self, request, context):
        """* sqkadmin: `setpeerdownloading`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePeer(self, request, context):
        """* sqkadmin: `deletepeer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyOffers(self, request, context):
        """* sqkadmin: `getbuyoffers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyOffer(self, request, context):
        """* sqkadmin: `getbuyoffer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncSqueaks(self, request, context):
        """* sqkadmin: `syncsqueaks`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncSqueak(self, request, context):
        """* sqkadmin: `syncsqueak`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PayOffer(self, request, context):
        """* sqkadmin: `payoffer`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentPayments(self, request, context):
        """* sqkadmin: `getsentpayments`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentPayment(self, request, context):
        """* sqkadmin: `getsentpayment`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqueakDetails(self, request, context):
        """* sqkadmin: `getsqueakdetails`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentOffers(self, request, context):
        """* sqkadmin: `getsentoffers`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReceivedPayments(self, request, context):
        """* sqkadmin: `getreceivedpayments`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeReceivedPayments(self, request, context):
        """* sqkadmin: `subscribereceivedpayments`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SqueakAdminServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LndGetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.LndGetInfo,
                    request_deserializer=proto_dot_lnd__pb2.GetInfoRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.GetInfoResponse.SerializeToString,
            ),
            'LndWalletBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.LndWalletBalance,
                    request_deserializer=proto_dot_lnd__pb2.WalletBalanceRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.WalletBalanceResponse.SerializeToString,
            ),
            'LndNewAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.LndNewAddress,
                    request_deserializer=proto_dot_lnd__pb2.NewAddressRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.NewAddressResponse.SerializeToString,
            ),
            'LndListChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.LndListChannels,
                    request_deserializer=proto_dot_lnd__pb2.ListChannelsRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.ListChannelsResponse.SerializeToString,
            ),
            'LndPendingChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.LndPendingChannels,
                    request_deserializer=proto_dot_lnd__pb2.PendingChannelsRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.PendingChannelsResponse.SerializeToString,
            ),
            'LndGetTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.LndGetTransactions,
                    request_deserializer=proto_dot_lnd__pb2.GetTransactionsRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.TransactionDetails.SerializeToString,
            ),
            'LndListPeers': grpc.unary_unary_rpc_method_handler(
                    servicer.LndListPeers,
                    request_deserializer=proto_dot_lnd__pb2.ListPeersRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.ListPeersResponse.SerializeToString,
            ),
            'LndConnectPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.LndConnectPeer,
                    request_deserializer=proto_dot_lnd__pb2.ConnectPeerRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.ConnectPeerResponse.SerializeToString,
            ),
            'LndDisconnectPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.LndDisconnectPeer,
                    request_deserializer=proto_dot_lnd__pb2.DisconnectPeerRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.DisconnectPeerResponse.SerializeToString,
            ),
            'LndOpenChannelSync': grpc.unary_unary_rpc_method_handler(
                    servicer.LndOpenChannelSync,
                    request_deserializer=proto_dot_lnd__pb2.OpenChannelRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.ChannelPoint.SerializeToString,
            ),
            'LndCloseChannel': grpc.unary_stream_rpc_method_handler(
                    servicer.LndCloseChannel,
                    request_deserializer=proto_dot_lnd__pb2.CloseChannelRequest.FromString,
                    response_serializer=proto_dot_lnd__pb2.CloseStatusUpdate.SerializeToString,
            ),
            'LndSubscribeChannelEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.LndSubscribeChannelEvents,
                    request_deserializer=proto_dot_lnd__pb2.ChannelEventSubscription.FromString,
                    response_serializer=proto_dot_lnd__pb2.ChannelEventUpdate.SerializeToString,
            ),
            'CreateSigningProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSigningProfile,
                    request_deserializer=proto_dot_squeak__admin__pb2.CreateSigningProfileRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.CreateSigningProfileReply.SerializeToString,
            ),
            'CreateContactProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContactProfile,
                    request_deserializer=proto_dot_squeak__admin__pb2.CreateContactProfileRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.CreateContactProfileReply.SerializeToString,
            ),
            'GetSigningProfiles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSigningProfiles,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSigningProfilesRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSigningProfilesReply.SerializeToString,
            ),
            'GetContactProfiles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContactProfiles,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetContactProfilesRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetContactProfilesReply.SerializeToString,
            ),
            'GetSqueakProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqueakProfile,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileReply.SerializeToString,
            ),
            'GetSqueakProfileByAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqueakProfileByAddress,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByAddressRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByAddressReply.SerializeToString,
            ),
            'GetSqueakProfileByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqueakProfileByName,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByNameRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakProfileByNameReply.SerializeToString,
            ),
            'SetSqueakProfileFollowing': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSqueakProfileFollowing,
                    request_deserializer=proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingReply.SerializeToString,
            ),
            'SetSqueakProfileSharing': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSqueakProfileSharing,
                    request_deserializer=proto_dot_squeak__admin__pb2.SetSqueakProfileSharingRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SetSqueakProfileSharingReply.SerializeToString,
            ),
            'DeleteSqueakProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSqueakProfile,
                    request_deserializer=proto_dot_squeak__admin__pb2.DeleteSqueakProfileRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DeleteSqueakProfileReply.SerializeToString,
            ),
            'MakeSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.MakeSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.MakeSqueakReply.SerializeToString,
            ),
            'GetSqueakDisplay': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqueakDisplay,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.SerializeToString,
            ),
            'GetTimelineSqueakDisplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimelineSqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysReply.SerializeToString,
            ),
            'GetAddressSqueakDisplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAddressSqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetAddressSqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetAddressSqueakDisplaysReply.SerializeToString,
            ),
            'GetAncestorSqueakDisplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAncestorSqueakDisplays,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysReply.SerializeToString,
            ),
            'DeleteSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.DeleteSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DeleteSqueakReply.SerializeToString,
            ),
            'CreatePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.CreatePeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.CreatePeerReply.SerializeToString,
            ),
            'GetPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetPeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetPeerReply.SerializeToString,
            ),
            'GetPeers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPeers,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetPeersRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetPeersReply.SerializeToString,
            ),
            'SetPeerDownloading': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPeerDownloading,
                    request_deserializer=proto_dot_squeak__admin__pb2.SetPeerDownloadingRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SetPeerDownloadingReply.SerializeToString,
            ),
            'SetPeerUploading': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPeerUploading,
                    request_deserializer=proto_dot_squeak__admin__pb2.SetPeerUploadingRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SetPeerUploadingReply.SerializeToString,
            ),
            'DeletePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePeer,
                    request_deserializer=proto_dot_squeak__admin__pb2.DeletePeerRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.DeletePeerReply.SerializeToString,
            ),
            'GetBuyOffers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyOffers,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetBuyOffersRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetBuyOffersReply.SerializeToString,
            ),
            'GetBuyOffer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyOffer,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetBuyOfferRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetBuyOfferReply.SerializeToString,
            ),
            'SyncSqueaks': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncSqueaks,
                    request_deserializer=proto_dot_squeak__admin__pb2.SyncSqueaksRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SyncSqueaksReply.SerializeToString,
            ),
            'SyncSqueak': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncSqueak,
                    request_deserializer=proto_dot_squeak__admin__pb2.SyncSqueakRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.SyncSqueakReply.SerializeToString,
            ),
            'PayOffer': grpc.unary_unary_rpc_method_handler(
                    servicer.PayOffer,
                    request_deserializer=proto_dot_squeak__admin__pb2.PayOfferRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.PayOfferReply.SerializeToString,
            ),
            'GetSentPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSentPayments,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentsRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentsReply.SerializeToString,
            ),
            'GetSentPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSentPayment,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSentPaymentRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSentPaymentReply.SerializeToString,
            ),
            'GetSqueakDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqueakDetails,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSqueakDetailsRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSqueakDetailsReply.SerializeToString,
            ),
            'GetSentOffers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSentOffers,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetSentOffersRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetSentOffersReply.SerializeToString,
            ),
            'GetReceivedPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReceivedPayments,
                    request_deserializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.GetReceivedPaymentsReply.SerializeToString,
            ),
            'SubscribeReceivedPayments': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeReceivedPayments,
                    request_deserializer=proto_dot_squeak__admin__pb2.SubscribeReceivedPaymentsRequest.FromString,
                    response_serializer=proto_dot_squeak__admin__pb2.ReceivedPayment.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squeaknode.SqueakAdmin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SqueakAdmin(object):
    """Interface exported by the server.
    """

    @staticmethod
    def LndGetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndGetInfo',
            proto_dot_lnd__pb2.GetInfoRequest.SerializeToString,
            proto_dot_lnd__pb2.GetInfoResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndWalletBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndWalletBalance',
            proto_dot_lnd__pb2.WalletBalanceRequest.SerializeToString,
            proto_dot_lnd__pb2.WalletBalanceResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndNewAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndNewAddress',
            proto_dot_lnd__pb2.NewAddressRequest.SerializeToString,
            proto_dot_lnd__pb2.NewAddressResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndListChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndListChannels',
            proto_dot_lnd__pb2.ListChannelsRequest.SerializeToString,
            proto_dot_lnd__pb2.ListChannelsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndPendingChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndPendingChannels',
            proto_dot_lnd__pb2.PendingChannelsRequest.SerializeToString,
            proto_dot_lnd__pb2.PendingChannelsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndGetTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndGetTransactions',
            proto_dot_lnd__pb2.GetTransactionsRequest.SerializeToString,
            proto_dot_lnd__pb2.TransactionDetails.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndListPeers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndListPeers',
            proto_dot_lnd__pb2.ListPeersRequest.SerializeToString,
            proto_dot_lnd__pb2.ListPeersResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndConnectPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndConnectPeer',
            proto_dot_lnd__pb2.ConnectPeerRequest.SerializeToString,
            proto_dot_lnd__pb2.ConnectPeerResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndDisconnectPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndDisconnectPeer',
            proto_dot_lnd__pb2.DisconnectPeerRequest.SerializeToString,
            proto_dot_lnd__pb2.DisconnectPeerResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndOpenChannelSync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/LndOpenChannelSync',
            proto_dot_lnd__pb2.OpenChannelRequest.SerializeToString,
            proto_dot_lnd__pb2.ChannelPoint.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndCloseChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/LndCloseChannel',
            proto_dot_lnd__pb2.CloseChannelRequest.SerializeToString,
            proto_dot_lnd__pb2.CloseStatusUpdate.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LndSubscribeChannelEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/LndSubscribeChannelEvents',
            proto_dot_lnd__pb2.ChannelEventSubscription.SerializeToString,
            proto_dot_lnd__pb2.ChannelEventUpdate.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSigningProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/CreateSigningProfile',
            proto_dot_squeak__admin__pb2.CreateSigningProfileRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.CreateSigningProfileReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContactProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/CreateContactProfile',
            proto_dot_squeak__admin__pb2.CreateContactProfileRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.CreateContactProfileReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSigningProfiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSigningProfiles',
            proto_dot_squeak__admin__pb2.GetSigningProfilesRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSigningProfilesReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContactProfiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetContactProfiles',
            proto_dot_squeak__admin__pb2.GetContactProfilesRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetContactProfilesReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqueakProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSqueakProfile',
            proto_dot_squeak__admin__pb2.GetSqueakProfileRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakProfileReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqueakProfileByAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSqueakProfileByAddress',
            proto_dot_squeak__admin__pb2.GetSqueakProfileByAddressRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakProfileByAddressReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqueakProfileByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSqueakProfileByName',
            proto_dot_squeak__admin__pb2.GetSqueakProfileByNameRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakProfileByNameReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSqueakProfileFollowing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SetSqueakProfileFollowing',
            proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SetSqueakProfileFollowingReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSqueakProfileSharing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SetSqueakProfileSharing',
            proto_dot_squeak__admin__pb2.SetSqueakProfileSharingRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SetSqueakProfileSharingReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSqueakProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DeleteSqueakProfile',
            proto_dot_squeak__admin__pb2.DeleteSqueakProfileRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DeleteSqueakProfileReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MakeSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/MakeSqueak',
            proto_dot_squeak__admin__pb2.MakeSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.MakeSqueakReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqueakDisplay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSqueakDisplay',
            proto_dot_squeak__admin__pb2.GetSqueakDisplayRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakDisplayReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimelineSqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetTimelineSqueakDisplays',
            proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetTimelineSqueakDisplaysReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAddressSqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetAddressSqueakDisplays',
            proto_dot_squeak__admin__pb2.GetAddressSqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetAddressSqueakDisplaysReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAncestorSqueakDisplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetAncestorSqueakDisplays',
            proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetAncestorSqueakDisplaysReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DeleteSqueak',
            proto_dot_squeak__admin__pb2.DeleteSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DeleteSqueakReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/CreatePeer',
            proto_dot_squeak__admin__pb2.CreatePeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.CreatePeerReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetPeer',
            proto_dot_squeak__admin__pb2.GetPeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetPeerReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPeers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetPeers',
            proto_dot_squeak__admin__pb2.GetPeersRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetPeersReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPeerDownloading(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SetPeerDownloading',
            proto_dot_squeak__admin__pb2.SetPeerDownloadingRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SetPeerDownloadingReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPeerUploading(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SetPeerUploading',
            proto_dot_squeak__admin__pb2.SetPeerUploadingRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SetPeerUploadingReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/DeletePeer',
            proto_dot_squeak__admin__pb2.DeletePeerRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.DeletePeerReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyOffers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetBuyOffers',
            proto_dot_squeak__admin__pb2.GetBuyOffersRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetBuyOffersReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyOffer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetBuyOffer',
            proto_dot_squeak__admin__pb2.GetBuyOfferRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetBuyOfferReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncSqueaks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SyncSqueaks',
            proto_dot_squeak__admin__pb2.SyncSqueaksRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SyncSqueaksReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncSqueak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/SyncSqueak',
            proto_dot_squeak__admin__pb2.SyncSqueakRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.SyncSqueakReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PayOffer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/PayOffer',
            proto_dot_squeak__admin__pb2.PayOfferRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.PayOfferReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSentPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSentPayments',
            proto_dot_squeak__admin__pb2.GetSentPaymentsRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSentPaymentsReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSentPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSentPayment',
            proto_dot_squeak__admin__pb2.GetSentPaymentRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSentPaymentReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqueakDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSqueakDetails',
            proto_dot_squeak__admin__pb2.GetSqueakDetailsRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSqueakDetailsReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSentOffers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetSentOffers',
            proto_dot_squeak__admin__pb2.GetSentOffersRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetSentOffersReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReceivedPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squeaknode.SqueakAdmin/GetReceivedPayments',
            proto_dot_squeak__admin__pb2.GetReceivedPaymentsRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.GetReceivedPaymentsReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeReceivedPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squeaknode.SqueakAdmin/SubscribeReceivedPayments',
            proto_dot_squeak__admin__pb2.SubscribeReceivedPaymentsRequest.SerializeToString,
            proto_dot_squeak__admin__pb2.ReceivedPayment.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
