name: Lint & Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - uses: actions/cache@v2
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -e '.[dev]'
      - uses: actions/cache@v2
        name: Configure pre-commit caching
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-
      - name: Install pre-commit hooks
        run: |
          pre-commit install-hooks
      - name: Lint
        run: |
          pre-commit run --all-files
  test:
    runs-on: ubuntu-latest
    name: "Test Python ${{ matrix.python-version }} & Django ${{ matrix.django-version }}"
    needs: [lint]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    strategy:
      matrix:
        django-version: ["1.11", "2.0", "2.1", "2.2", "3.0", "3.1"]
        python-version: ["3.5", "3.6", "3.7", "3.8", "3.9"]
        exclude:
          # 1.11
          - django-version: "1.11"
            python-version: "3.8"
          - django-version: "1.11"
            python-version: "3.9"
          # 2.0
          - django-version: "2.0"
            python-version: "3.8"
          - django-version: "2.0"
            python-version: "3.9"
          # 2.1
          - django-version: "2.1"
            python-version: "3.8"
          - django-version: "2.1"
            python-version: "3.9"
          # 3.0
          - django-version: "3.0"
            python-version: "3.5"
          # 3.1
          - django-version: "3.1"
            python-version: "3.5"
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install Django~=${{ matrix.django-version }}.0
          python -m pip install '.[test]'
      - name: Create additional DB users
        run: |
          psql -c "CREATE ROLE someuser WITH LOGIN PASSWORD 'somepass' CREATEDB;"
          psql -c "CREATE ROLE otheruser WITH LOGIN PASSWORD 'otherpass' CREATEDB;"
        env:
          PGHOST: localhost
          PGPASSWORD: postgres
          PGUSER: postgres
      - name: Run tests
        run: |
          coverage run "$(command -v django-admin.py)" test --pythonpath . -v 2 --settings=tests.settings
          coverage report
      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  docs:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r docs/requirements.txt
      - name: Generate and test API docs
        run: |
          make html
        env:
          SPHINXOPTS: "-n -v -W --keep-going"
        working-directory: ./docs
