# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from cogneed_protos.ai.cogneed.api import common_pb2 as cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_common__pb2
from cogneed_protos.ai.cogneed.api.contentmanagement import content_management_pb2 as cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_contentmanagement_dot_content__management__pb2


class ContentManagementServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateUseCase = channel.unary_unary(
        '/ai.cogneed.api.contentmanagement.ContentManagementService/CreateUseCase',
        request_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_contentmanagement_dot_content__management__pb2.CreateUseCaseRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_common__pb2.AckResponse.FromString,
        )
    self.CreateKeywordUsage = channel.unary_unary(
        '/ai.cogneed.api.contentmanagement.ContentManagementService/CreateKeywordUsage',
        request_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_contentmanagement_dot_content__management__pb2.CreateKeywordUsageRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_common__pb2.AckResponse.FromString,
        )


class ContentManagementServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CreateUseCase(self, request, context):
    """Create a new UseCase using associated token to determine organization
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateKeywordUsage(self, request, context):
    """Create a new KeywordUsage.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ContentManagementServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateUseCase': grpc.unary_unary_rpc_method_handler(
          servicer.CreateUseCase,
          request_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_contentmanagement_dot_content__management__pb2.CreateUseCaseRequest.FromString,
          response_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_common__pb2.AckResponse.SerializeToString,
      ),
      'CreateKeywordUsage': grpc.unary_unary_rpc_method_handler(
          servicer.CreateKeywordUsage,
          request_deserializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_contentmanagement_dot_content__management__pb2.CreateKeywordUsageRequest.FromString,
          response_serializer=cogneed__protos_dot_ai_dot_cogneed_dot_api_dot_common__pb2.AckResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.cogneed.api.contentmanagement.ContentManagementService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
