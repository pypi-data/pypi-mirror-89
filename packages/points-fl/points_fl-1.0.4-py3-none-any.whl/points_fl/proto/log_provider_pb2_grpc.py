# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from points_fl.proto import log_provider_pb2 as points__fl_dot_proto_dot_log__provider__pb2


class LogProviderStub(object):
    """LogProvider provides logs to the frontend
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLastLines = channel.unary_unary(
                '/LogProvider/GetLastLines',
                request_serializer=points__fl_dot_proto_dot_log__provider__pb2.GetLastLinesRequest.SerializeToString,
                response_deserializer=points__fl_dot_proto_dot_log__provider__pb2.GetLastLinesResponse.FromString,
                )
        self.GetLogByJobID = channel.unary_unary(
                '/LogProvider/GetLogByJobID',
                request_serializer=points__fl_dot_proto_dot_log__provider__pb2.GetLogByJobIDRequest.SerializeToString,
                response_deserializer=points__fl_dot_proto_dot_log__provider__pb2.GetLogByJobIDResponse.FromString,
                )


class LogProviderServicer(object):
    """LogProvider provides logs to the frontend
    """

    def GetLastLines(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLogByJobID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LogProviderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLastLines': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLastLines,
                    request_deserializer=points__fl_dot_proto_dot_log__provider__pb2.GetLastLinesRequest.FromString,
                    response_serializer=points__fl_dot_proto_dot_log__provider__pb2.GetLastLinesResponse.SerializeToString,
            ),
            'GetLogByJobID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLogByJobID,
                    request_deserializer=points__fl_dot_proto_dot_log__provider__pb2.GetLogByJobIDRequest.FromString,
                    response_serializer=points__fl_dot_proto_dot_log__provider__pb2.GetLogByJobIDResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'LogProvider', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LogProvider(object):
    """LogProvider provides logs to the frontend
    """

    @staticmethod
    def GetLastLines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LogProvider/GetLastLines',
            points__fl_dot_proto_dot_log__provider__pb2.GetLastLinesRequest.SerializeToString,
            points__fl_dot_proto_dot_log__provider__pb2.GetLastLinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLogByJobID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LogProvider/GetLogByJobID',
            points__fl_dot_proto_dot_log__provider__pb2.GetLogByJobIDRequest.SerializeToString,
            points__fl_dot_proto_dot_log__provider__pb2.GetLogByJobIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
