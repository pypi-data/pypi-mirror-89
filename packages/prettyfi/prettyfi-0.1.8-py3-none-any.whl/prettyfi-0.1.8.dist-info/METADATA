Metadata-Version: 2.1
Name: prettyfi
Version: 0.1.8
Summary: Simple tool to prettify your files
Home-page: https://github.com/s3rius/prettyfi
Keywords: Files,Pretty,Tool,CodeStyle
Author: Pavel Kirilin
Author-email: win10@list.ru
Requires-Python: >=3.9,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Utilities
Requires-Dist: pydantic (>=1.7.3,<2.0.0)
Project-URL: Repository, https://github.com/s3rius/prettyfi
Description-Content-Type: text/x-rst

|py_versions| |build_statuses| |pypi_versions|

.. |py_versions| image:: https://img.shields.io/pypi/pyversions/prettyfi?style=flat-square
    :alt: python versions

.. |build_statuses| image:: https://img.shields.io/github/workflow/status/s3rius/prettyfi/Testing%20and%20publish?style=flat-square
    :alt: build status

.. |pypi_versions| image:: https://img.shields.io/pypi/v/prettyfi?style=flat-square
    :alt: pypi version
    :target: https://pypi.org/project/prettyfi/

Prettify your files with one command
====================================

Prettyfi usage
**************

usage: prettyfi [-h] [-c CONFIG] files [files ...]

Simple utility to make your files prettier.

positional arguments:
  files                 Files to sort

optional arguments:
    --help                  show help message and exit
    --config=config_path    path to configuration file
    -r, --recursive         Traverse dirs recursively

.. code:: bash

    prettyfi "prettyfi/main.py" "pyproject.toml" # Will make this files beautiful

Prettyfi configuration
**********************

Default config file location is "~/.prettyfirc".

Config file format:

.. code:: bash

    .<ext> $ pretty_command {file}
    # Where "ext" -> your file extension,
    # {file} -> stub for actual file,
    # For example:
    .py   $ isort {file}
    .java $ rm {file}

