[metadata]
name = sshoot
version = 1.5.1
license = GPLv3+
description = Manage multiple sshuttle VPN sessions
long_description = file: README.rst
author = Alberto Donato
author_email = alberto.donato@gmail.com
maintainer = Alberto Donato
maintainer_email = alberto.donato@gmail.com
url = https://github.com/albertodonato/sshoot
keywords = ssh, sshuttle, vpn
classifiers = 
	Development Status :: 5 - Production/Stable
	Environment :: Console
	Intended Audience :: Developers
	Intended Audience :: System Administrators
	License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
	Operating System :: OS Independent
	Programming Language :: Python
	Topic :: System :: Networking
	Topic :: Utilities

[options]
python_requires = >= 3.7
install_requires = 
	argcomplete
	prettytable
	PyYAML
	pyxdg
	toolrack >= 3.0.0
packages = find:
include_package_data = True

[options.packages.find]
include = 
	sshoot
	sshoot.*

[options.extras_require]
testing = 
	pytest
	pytest-mock
i18n = 
	Babel

[options.entry_points]
console_scripts = 
	sshoot = sshoot.main:sshoot

[globals]
lint_files = setup.py sshoot

[coverage:run]
source = sshoot

[coverage:report]
show_missing = True
fail_under = 100.0
skip_covered = True

[flake8]
max-line-length = 80
select = C, E, F, W, B, B950
ignore = E203, E501, W503

[mypy]
incremental = False
warn_return_any = True
warn_unused_configs = True
ignore_missing_imports = True

[tox:tox]
skipsdist = True
envlist = format, lint, check, coverage

[testenv]
deps = 
	.
	.[testing]
commands = 
	{envbindir}/pytest {posargs}

[testenv:format]
deps = 
	black
	isort
commands = 
	{envbindir}/isort {[globals]lint_files}
	{envbindir}/black -q {[globals]lint_files}

[testenv:lint]
deps = 
	black
	flake8
	isort
commands = 
	{envbindir}/isort --check-only --diff {[globals]lint_files}
	{envbindir}/black --check {[globals]lint_files}
	{envbindir}/flake8 {[globals]lint_files}

[testenv:check]
deps = 
	mypy
commands = 
	{envbindir}/mypy -p sshoot {posargs}

[testenv:coverage]
deps = 
	.
	.[testing]
	pytest-cov
commands = 
	{envbindir}/pytest --cov {posargs}

[testenv:run]
deps = 
	-e .
commands = 
	{envbindir}/sshoot {posargs}

[testenv:i18n]
deps = 
	.
	.[i18n]
commands = 
	{envpython} setup.py {posargs}

[init_catalog]
domain = sshoot
input-file = sshoot/locale/sshoot.pot
output-dir = sshoot/locale

[update_catalog]
domain = sshoot
input-file = sshoot/locale/sshoot.pot
output-dir = sshoot/locale

[extract_messages]
project = sshoot
output-file = sshoot/locale/sshoot.pot
sort-by-file = true

[compile_catalog]
domain = sshoot
directory = sshoot/locale

[egg_info]
tag_build = 
tag_date = 0

