[tox]
tox_pyenv_fallback=False
envlist =
    hdf5_{18,110,112}
    isort
    black
    flake8
    pydocstyle
    doc8
    sphinx
    py3{6,7}_{18,110}_min
    py3{7,8,9}_{18,110,112}_latest
    coverage
    deploy

[testenv:flake8]
basepython = python3.9
depends = black
deps = 
    flake8 
    flake8-bugbear
skip_install = True
commands = flake8 -v

[testenv:isort]
basepython = python3.9
deps = 
    isort
    coverage<5
skip_install = True
commands = isort . --recursive --apply
commands_pre = coverage erase

[testenv:black]
basepython = python3.9
depends = isort
deps = black
skip_install = True
commands = black --line-length 79 setup.py meavis tests examples

[testenv:pydocstyle]
basepython = python3.9
depends = black
deps = pydocstyle
skip_install = True
commands = pydocstyle meavis

[testenv:doc8]
basepython = python3.9
depends = black
deps =
    doc8
    pygments
skip_install = True
commands = doc8

[testenv:sphinx]
basepython = python3.8
depends =
    black
install_command =
    python -m pip install --upgrade --upgrade-strategy eager --cache-dir={toxinidir}/.cache/pip {packages} {opts}
deps = 
    breathe<4.15
    sphinx<3
    sphinxcontrib-apidoc
    sphinx_rtd_theme 
    m2r
    pyyaml
whitelist_externals = rm
setenv =
    READTHEDOCS = True
commands =
    rm -fr docs/source/api
    sphinx-build -W -b html docs/source docs/build/html
    sphinx-build -W -b linkcheck docs/source docs/build/linkcheck
parallel_show_output = true

[testenv:coverage]
basepython = python3.9
deps = coverage<5
skip_install = True
depends =
    py3{6,7,8,9}_{18,110,112}_{min,latest}
commands =
    coverage combine
    coverage report -m
commands_post = 
    coverage html -d coverage_html --fail-under 0
    coverage xml -o coverage.xml --fail-under 0
    coverage erase

[testenv:deploy]
basepython = python3.9
deps = 
    twine
skip_install = True
depends =
    coverage
whitelist_externals = 
    rm
setenv =
    TWINE_USERNAME = {env:TWINE_USERNAME}
    TWINE_PASSWORD = {env:TWINE_PASSWORD}
commands =
    rm -fr dist
    python setup.py sdist
    twine upload dist/*

[testenv]
basepython = 
    py36_{18,110,112}_{min,latest}: python3.6
    py37_{18,110,112}_{min,latest}: python3.7
    py38_{18,110,112}_{min,latest}: python3.8
    py39_{18,110,112}_{min,latest}: python3.9

    hdf5_{18,110,112}: python3.9
depends =
    py3{6,7,8,9}_18_{min,latest}: hdf5_18
    py3{6,7,8,9}_110_{min,latest}: hdf5_110
    py3{7,8,9}_112_latest: hdf5_112
    py3{6,7,8,9}_{18,110,112}_{min,latest}: black

    hdf5_110: hdf5_18
    hdf5_112: hdf5_110
install_command =
    python -m pip install --upgrade --upgrade-strategy only-if-needed --cache-dir={toxinidir}/.cache/pip --no-binary h5py --no-binary numpy {packages} {opts}
skip_install = 
    py3{6,7,8,9}_{18,110,112}_{min,latest}: False
    hdf5_{18,110,112}: True
deps =
    py3{6,7,8,9}_{18,110,112}_{min,latest}: coverage<5
    py3{6,7,8,9}_{18,110,112}_{min,latest}: pytest >= 3.1
    py3{6,7,8,9}_{18,110,112}_{min,latest}: pytest-benchmark
    py3{6,7,8,9}_{18,110,112}_{min,latest}: pytest-html
    py3{6,7,8,9}_{18,110,112}_{min,latest}: pytest-mock

    py3{6,7}_{18,110}_min: h5py ==2.4
    py3{6,7}_{18,110}_min: ipython ==0.12
    py3{6,7}_{18,110}_min: matplotlib ==1.5
    py3{6,7}_{18,110}_min: numpy ==1.15
    py3{6,7}_{18,110}_min: scipy ==1.1
whitelist_externals = 
    hdf5_{18,110,112}: cmake
    hdf5_{18,110,112}: cpack
    hdf5_{18,110,112}: git
    hdf5_{18,110,112}: sed
    
    rm
setenv =
    hdf5_18: API = v18
    hdf5_18: BRANCH = 1.8/master
    hdf5_18: VERSION = 1.8.21
    hdf5_110: API = v110
    hdf5_110: BRANCH = 1.10/master
    hdf5_110: VERSION = 1.10.7
    hdf5_112: API = v112
    hdf5_112: BRANCH = 1.12/master
    hdf5_112: VERSION = 1.12.0

    py3{6,7,8,9}_18_{min,latest}: HDF5_DIR = {toxinidir}/build/HDF_Group/HDF5/1.8.21
    py3{6,7,8,9}_110_{min,latest}: HDF5_DIR = {toxinidir}/build/HDF_Group/HDF5/1.10.7
    py3{7,8,9}_112_latest: HDF5_DIR = {toxinidir}/build/HDF_Group/HDF5/1.12.0
changedir = hdf5_{18,110,112}: {toxinidir}/build/{envname}
parallel_show_output = true
commands =
    hdf5_{18,110,112}: git -C ../hdf5 checkout -f {env:BRANCH}
    hdf5_{18,110,112}: git -C ../hdf5 pull
    hdf5_{18,110,112}: sed -i 1d ../hdf5/CMakeLists.txt 
    hdf5_{18,110,112}: sed -i 1d ../hdf5/src/CMakeLists.txt 
    hdf5_{18,110,112}: sed -i 1d ../hdf5/hl/CMakeLists.txt 
    hdf5_{18,110,112}: sed -i 1d ../hdf5/hl/src/CMakeLists.txt 
    hdf5_{18,110,112}: sed -i 's/# cmakedefine/#cmakedefine/g' ../hdf5/config/cmake/H5pubconf.h.in
    hdf5_{18,110,112}: sed -i 's/SameMinorVersion/SameMajorVersion/g' ../hdf5/CMakeInstallation.cmake
    hdf5_{18,110,112}: rm -rf ./*
    hdf5_{18,110,112}: cmake -C ../hdf5/config/cmake/cacheinit.cmake -G "Unix Makefiles" -Wno-dev \
    hdf5_{18,110,112}:    -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF \
    hdf5_{18,110,112}:    -DHDF5_BUILD_HL_LIB:BOOL=ON -DHDF5_BUILD_EXAMPLES:BOOL=OFF -DHDF5_BUILD_TOOLS:BOOL=OFF \
    hdf5_{18,110,112}:    -DHDF5_BUILD_CPP_LIB:BOOL=OFF -DHDF5_BUILD_FORTRAN:BOOL=OFF \
    hdf5_{18,110,112}:    -DHDF5_ENABLE_SZIP_SUPPORT:BOOL=OFF -DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=OFF \
    hdf5_{18,110,112}:    -DHDF5_ENABLE_PARALLEL:BOOL=OFF -DHDF5_ENABLE_THREADSAFE:BOOL=OFF -DDEFAULT_API_VERSION:STRING={env:API} \
    hdf5_{18,110,112}:    ../hdf5
    hdf5_{18,110,112}: cmake --build . --config Release
    hdf5_{18,110,112}: cpack -C Release CPackConfig.cmake 
    hdf5_{18,110,112}: ./HDF5-{env:VERSION}-Linux.sh --prefix=../ --exclude-subdir

    py3{6,7,8,9}_{18,110,112}_{min,latest}: rm -rf {homedir}/.config/meavis
    py3{6,7,8,9}_{18,110,112}_{min,latest}: coverage run --parallel --module pytest \
    py3{6,7,8,9}_{18,110,112}_{min,latest}:     --benchmark-calibration-precision=100 --benchmark-disable-gc \
    py3{6,7,8,9}_{18,110,112}_{min,latest}:     --junitxml=log/test_{envname}.xml -o junit_suite_name=test_{envname} \
    py3{6,7,8,9}_{18,110,112}_{min,latest}:     --benchmark-json=log/benchmark_{envname}.json \
    py3{6,7,8,9}_{18,110,112}_{min,latest}:     --html=log/test_html_{envname}/report.html
    py3{6,7,8,9}_{18,110,112}_{min,latest}: python -m pytest \
    py3{6,7,8,9}_{18,110,112}_{min,latest}:     --junitxml=log/example_{envname}.xml -o junit_suite_name=example_{envname} \
    py3{6,7,8,9}_{18,110,112}_{min,latest}:     --html=log/example_html_{envname}/report.html examples
