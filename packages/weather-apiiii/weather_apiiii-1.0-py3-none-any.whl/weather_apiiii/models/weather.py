# -*- coding: utf-8 -*-

"""
    weather_apiiii

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Weather(object):

    """Implementation of the 'Weather' model.

    TODO: type model description here.

    Attributes:
        id (int): TODO: type description here.
        main (string): TODO: type description here.
        description (string): TODO: type description here.
        icon (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "main":'main',
        "description":'description',
        "icon":'icon'
    }

    def __init__(self,
                 id=None,
                 main=None,
                 description=None,
                 icon=None):
        """Constructor for the Weather class"""

        # Initialize members of the class
        self.id = id
        self.main = main
        self.description = description
        self.icon = icon


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        main = dictionary.get('main')
        description = dictionary.get('description')
        icon = dictionary.get('icon')

        # Return an object of this model
        return cls(id,
                   main,
                   description,
                   icon)


