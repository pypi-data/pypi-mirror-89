from dataclasses import dataclass
from {{ package_api_lib_module_name }}.client import ApiClient
from {{ package_api_lib_module_name }}.configuration import Configuration
from {{ package_api_lib_module_name }}.adapter.base import HttpClientAdapter

{% for api in apis %}
from .apis.{{ api.name }}.api import {{ api.type_name }}
{% endfor %}


@dataclass
class AutogeneratedApiClient:
    configuration: Configuration
    client: ApiClient
    {%- for api in apis %}
    {{ api.name }}: {{ api.type_name }}
    {%- endfor %}


def new_client(
    adapter: HttpClientAdapter, configuration: Configuration
) -> AutogeneratedApiClient:
    client = ApiClient(configuration=configuration, adapter=adapter)
    return AutogeneratedApiClient(
        configuration,
        client=client,
        {% for api in apis %}
        {{ api.name }}={{ api.type_name }}(client, configuration){% if not loop.last %},{% endif %}
        {% endfor %}
    )
