Metadata-Version: 2.1
Name: django-user-tasks
Version: 1.3.2
Summary: Management of user-triggered asynchronous tasks in Django projects
Home-page: https://github.com/edx/django-user-tasks
Author: edX
Author-email: oscm@edx.org
License: Apache Software License 2.0
Description: django-user-tasks
        =================
        
        .. image:: https://img.shields.io/pypi/v/django-user-tasks.svg
            :target: https://pypi.python.org/pypi/django-user-tasks/
            :alt: PyPI
        
        .. image:: https://github.com/edx/django-user-tasks/workflows/Python%20CI/badge.svg?branch=master
            :target: https://github.com/edx/django-user-tasks/actions
            :alt: CI
        
        .. image:: http://codecov.io/github/edx/django-user-tasks/coverage.svg?branch=master
            :target: http://codecov.io/github/edx/django-user-tasks?branch=master
            :alt: Codecov
        
        .. image:: https://readthedocs.org/projects/django-user-tasks/badge/?version=latest
            :target: http://django-user-tasks.readthedocs.io/en/latest/
            :alt: Documentation
        
        .. image:: https://img.shields.io/pypi/pyversions/django-user-tasks.svg
            :target: https://pypi.python.org/pypi/django-user-tasks/
            :alt: Supported Python versions
        
        .. image:: https://img.shields.io/github/license/edx/django-user-tasks.svg
            :target: https://github.com/edx/django-user-tasks/blob/master/LICENSE.txt
            :alt: License
        
        django-user-tasks is a reusable Django application for managing user-triggered
        asynchronous tasks.  It provides a status page for each such task, which
        includes a meaningful progress indicator if the task is currently being
        executed and provides any appropriate text and/or links for output once the
        task is complete.
        
        In Open edX, such tasks include operations such as exporting or importing a
        course, sending an email to all the students in a course, uploading a video,
        and other tasks which often take too long to perform during a single web
        request (as outlined in `OEP-3`_).  However, this has been written with the
        intention of being useful in a variety of Django projects outside the Open edX
        platform as well.
        
        Note that this library was created as a consolidation of lessons learned from
        implementing such tasks in various parts of the Open edX code base.  They
        don't yet all use this library, but the plan is to over time refactor many of
        them to do so.
        
        .. _OEP-3: https://open-edx-proposals.readthedocs.io/en/latest/oeps/oep-0003.html
        
        Overview
        --------
        
        django-user-tasks is currently a wrapper for `Celery`_ (although the hope is
        that it could also be extended to also support `channels`_ and other
        asynchronous task queues).  By extending the provided ``UserTask`` class (or
        adding ``UserTaskMixin`` to an existing Task subclass) and providing a
        ``user_id`` task argument, the task's status is stored in a database table
        separate from the Celery broker and result store.  This ``UserTaskStatus``
        model allows for full database queries of the tasks that users are most likely
        to care about while not imposing any restrictions on the Celery configuration
        most appropriate for the site's overall needs for asynchronous task
        processing.
        
        Most of the status updating is handled automatically via Celery's `signals`_
        mechanism, but it can be enhanced by:
        
        * Overriding the ``UserTaskMixin`` methods such as ``generate_name`` and
          ``calculate_total_steps`` for particular types of tasks
        * Calling some of the ``UserTaskStatus`` methods like
          ``increment_completed_steps`` and ``set_state`` from the task implementation
        * Saving task output as instances of the ``UserTaskArtifact`` model
        
        .. _Celery: http://www.celeryproject.org/
        .. _channels: https://channels.readthedocs.io/en/latest/
        .. _signals: http://docs.celeryproject.org/en/latest/userguide/signals.html
        
        Documentation
        -------------
        
        The full documentation is at https://django-user-tasks.readthedocs.org.
        
        License
        -------
        
        The code in this repository is licensed under the Apache Software License 2.0 unless
        otherwise noted.
        
        Please see ``LICENSE.txt`` for details.
        
        How To Contribute
        -----------------
        
        Contributions are very welcome.
        
        Please read `How To Contribute <https://github.com/edx/edx-platform/blob/master/CONTRIBUTING.rst>`_ for details.
        
        Even though they were written with ``edx-platform`` in mind, the guidelines
        should be followed for Open edX code in general.
        
        Reporting Security Issues
        -------------------------
        
        Please do not report security issues in public. Please email security@edx.org.
        
        Getting Help
        ------------
        
        Have a question about this repository, or about Open edX in general?  Please
        refer to this `list of resources`_ if you need any assistance.
        
        .. _list of resources: https://open.edx.org/getting-help
        
        
        Change Log
        ----------
        
        ..
           All enhancements and patches to cookiecutter-django-app will be documented
           in this file.  It adheres to the structure of http://keepachangelog.com/ ,
           but in reStructuredText instead of Markdown (for ease of incorporation into
           Sphinx documentation and the PyPI description).
        
           This project adheres to Semantic Versioning (http://semver.org/).
        
        .. There should always be an "Unreleased" section for changes pending release.
        
        Unreleased
        ~~~~~~~~~~
        
        *
        
        [1.3.2] - 2020-12-17
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Updated the deprecated celery import class. New import is compatible with 4.4.7 also.
        
        
        [1.3.1] - 2020-11-23
        ~~~~~~~~~~~~~~~~~~~~
        
        Added
        +++++
        
        * Added support for Django REST Framework 3.10.x through 3.12.x
        
        [1.3.0] - 2020-08-25
        ~~~~~~~~~~~~~~~~~~~~
        
        Added
        +++++
        
        * Added support for celery 4
        
        [1.2.0] - 2020-08-20
        ~~~~~~~~~~~~~~~~~~~~
        
        Removed
        +++++++
        
        * Removed code related to Python 2
        
        
        [1.1.0] - 2020-05-07
        ~~~~~~~~~~~~~~~~~~~~
        
        Added
        +++++++
        
        * Added support for python 3.8
        
        Removed
        +++++++
        
        * Dropped support for Django < 2.2
        
        [1.0.0] - 2020-03-18
        ~~~~~~~~~~~~~~~~~~~~
        
        Removed
        +++++++
        
        * Dropped Python 2.7 support
        
        [0.3.0] - 2019-12-15
        ~~~~~~~~~~~~~~~~~~~~
        
        Added
        +++++
        
        * Added support for Django 2.2
        
        [0.2.1] - 2019-09-25
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * `start_user_task` should only close obsolete connections if the current connection is NOT in an atomic block
          (which fixes errors on devstack studio/course-publishing).
        
        [0.2.0] - 2019-08-30
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Have the `start_user_task` receiver close obsolete connections before starting the task.
        
        
        [0.1.9] - 2019-08-27
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Fix issue with `UserTaskArtifactAdmin` and `UserTaskStatusAdmin` where `ordering` attribute must be a tuple or list.
        
        
        [0.1.8] - 2019-08-22
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Improve list display for `ModelAdmin`.
        
        
        [0.1.7] - 2019-05-29
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Make ``UserTaskArtifact.url`` a ``TextField`` with a ``URLValidator``
          instead of a ``URLField``.
        
        
        [0.1.6] - 2019-05-29
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Upgrade requirements.
        * Change ``max_length`` of ``UserTaskArtifact.url`` from 200 to 512.
        
        
        [0.1.5] - 2017-08-03
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Added testing/support for Django 1.11.
        
        [0.1.4] - 2017-01-30
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Slightly improved handling of tasks which start before their status records
          are committed (due to database transactions).  Also documented how to avoid
          this problem in the first place.
        
        [0.1.3] - 2017-01-03
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Tasks which were explicitly canceled, failed, or retried no longer have
          their status changed to ``Succeeded`` just because the task exited cleanly.
        * Celery tasks which fail to import cleanly by name (because they use a custom
          name which isn't actually the fully qualified task name) are now just ignored
          in the ``before_task_publish`` signal handler.
        
        [0.1.2] - 2016-12-05
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Add a migration to explicitly reference the setting for artifact file storage.
          This setting is likely to vary between installations, but doesn't affect the
          generated database schema.  This change should prevent ``makemigrations``
          from creating a new migration whenever the setting value changes.
        
        [0.1.1] - 2016-10-11
        ~~~~~~~~~~~~~~~~~~~~
        
        Changed
        +++++++
        
        * Fix Travis configuration for PyPI deployments.
        * Switch from the Read the Docs Sphinx theme to the Open edX one for documentation.
        
        
        [0.1.0] - 2016-10-07
        ~~~~~~~~~~~~~~~~~~~~
        
        Added
        +++++
        
        * First attempt to release on PyPI.
        
Keywords: Django edx
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: Django
Classifier: Framework :: Django :: 2.2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.8
Description-Content-Type: text/x-rst
