[tox]
envlist = linters, py3, insync, integration
isolated_build = True

[tox:.package]
## Required for poetry
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[testenv]
skip_install = true
deps = poetry >= 1.0.5
commands =
    poetry install
    poetry env info
    poetry run py.test -v test -k "not integration" {posargs}

[testenv:linters]
basepython = python3
commands=
    poetry install
    poetry run flake8 --version
    poetry run flake8 ansible_builder test
    poetry run yamllint --version
    poetry run yamllint -s .

# Tox target to ensure both pyproject.toml and setup.py are in sync
#
[testenv:version]
whitelist_externals =
    bash
commands =
    bash -c "poetry version $(git describe --tags --abbrev=0)"

# Tox target to ensure both pyproject.toml and setup.py are in sync
[testenv:integration]
# rootless podman reads $HOME
passenv = HOME
whitelist_externals =
    bash
    mkdir
commands =
    mkdir -p artifacts
    poetry install
    poetry env info
    bash -c 'poetry run pytest test/integration -v -n `python -c "import multiprocessing; print(int(multiprocessing.cpu_count()/2))"` --junitxml=artifacts/results.xml {posargs}'
