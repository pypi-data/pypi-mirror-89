# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from cogneed_protos.predict.mfcc_buffer import mfcc_buffer_service_pb2 as cogneed__protos_dot_predict_dot_mfcc__buffer_dot_mfcc__buffer__service__pb2


class MfccBufferServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.get_mfcc = channel.unary_unary(
        '/ai.cogneed.api.predict.mfccbuffer.MfccBufferService/get_mfcc',
        request_serializer=cogneed__protos_dot_predict_dot_mfcc__buffer_dot_mfcc__buffer__service__pb2.MfccBufferRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_predict_dot_mfcc__buffer_dot_mfcc__buffer__service__pb2.MfccBufferResponse.FromString,
        )


class MfccBufferServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def get_mfcc(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MfccBufferServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'get_mfcc': grpc.unary_unary_rpc_method_handler(
          servicer.get_mfcc,
          request_deserializer=cogneed__protos_dot_predict_dot_mfcc__buffer_dot_mfcc__buffer__service__pb2.MfccBufferRequest.FromString,
          response_serializer=cogneed__protos_dot_predict_dot_mfcc__buffer_dot_mfcc__buffer__service__pb2.MfccBufferResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.cogneed.api.predict.mfccbuffer.MfccBufferService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
