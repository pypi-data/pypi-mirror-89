{
    "AWSTemplateFormatVersion" : "2010-09-09",
        "Description" : "Cloudknot PARS AWS CloudFormation Template: This template contains IAM roles, a VPC with subnets for each availability zone, and a security group",
        "Parameters" : {
            "BatchServiceRoleName" : {
                "Type" : "String",
                "Default" : "cloudknot-batch-service-role",
                "Description" : "Name of the batch service IAM role. Default is cloudknot-batch-service-role.",
                "MinLength" : "1",
                "MaxLength" : "64",
                "ConstraintDescription" : "The role name must be between 1 and 64 characters"
            },
            "EcsInstanceRoleName" : {
                "Type" : "String",
                "Default" : "cloudknot-ecs-instance-role",
                "Description" : "Name of the ECS instance IAM role. Default is cloudknot-ecs-instance-role.",
                "MinLength" : "1",
                "MaxLength" : "64",
                "ConstraintDescription" : "The role name must be between 1 and 64 characters"
            },
            "SpotFleetRoleName" : {
                "Type" : "String",
                "Default" : "cloudknot-spot-fleet-role",
                "Description" : "Name of the spot fleet IAM role. Default is cloudknot-spot-fleet-role.",
                "MinLength" : "1",
                "MaxLength" : "64",
                "ConstraintDescription" : "The role name must be between 1 and 64 characters"
            },
            "VpcCidr" : {
                "Type" : "String",
                "Default" : "172.31.0.0/16",
                "Description" : "IPv4 CIDR block to be used for creation of a new VPC. Default=172.31.0.0/16",
                "MinLength" : "10",
                "MaxLength" : "20",
                "ConstraintDescription" : "The CIDR block must be between 10 and 20 characters"
            },
            "VpcInstanceTenancy" : {
                "Type" : "String",
                "Default" : "default",
                "Description" : "The allowed tenancy of instances launched into the VPC. Default='default'",
                "AllowedValues" : ["default", "dedicated"],
                "ConstraintDescription" : "The instance tenancy must be either 'default' or 'dedicated.'"
            },
            "Subnet1Cidr" : {
                "Type" : "String",
                "Default" : "172.31.0.0/20",
                "Description" : "IPv4 CIDR block to be used for the first subnet. Default=172.31.0.0/16",
                "MinLength" : "10",
                "MaxLength" : "20",
                "ConstraintDescription" : "The CIDR block must be between 10 and 20 characters"
            },
            "Subnet2Cidr" : {
                "Type" : "String",
                "Default" : "172.31.16.0/20",
                "Description" : "IPv4 CIDR block to be used for the second subnet. Default=172.31.0.0/16",
                "MinLength" : "10",
                "MaxLength" : "20",
                "ConstraintDescription" : "The CIDR block must be between 10 and 20 characters"
            },
            "SecurityGroupDescription" : {
                "Type" : "String",
                "Default" : "This security group was automatically generated by cloudknot.",
                "Description" : "Description of the security group. Default is 'This secutiry group was automatically generated by cloudknot'",
                "MinLength" : "1",
                "MaxLength" : "255",
                "ConstraintDescription" : "The security group description must be between 1 and 255 characters"
            },
            "IamPolicies" : {
                "Type" : "CommaDelimitedList",
                "Description" : "List of policies to attach to the ECS Instance Role",
                "ConstraintDescription" : "Must be a list of existing IAM policies."
            }
        },
        "Mappings" : {
            "AWSRegion2AZ" : {
                "us-east-1" : {
                    "1" : "us-east-1a",
                    "2" : "us-east-1b",
                    "3" : "us-east-1c",
                    "4" : "us-east-1d",
                    "5" : "us-east-1e",
                    "6" : "us-east-1f"
                },
                "us-east-2" : {
                    "1" : "us-east-2a",
                    "2" : "us-east-2b",
                    "3" : "us-east-2c"
                },
                "us-west-1" : {
                    "1" : "us-west-1a",
                    "2" : "us-west-1b",
                    "3" : "us-west-1c"
                },
                "us-west-2" : {
                    "1" : "us-west-2a",
                    "2" : "us-west-2b",
                    "3" : "us-west-2c"
                },
                "ap-northeast-1" : {
                    "1" : "ap-northeast-1a",
                    "2" : "ap-northeast-1b",
                    "3" : "ap-northeast-1c",
                    "4" : "ap-northeast-1d"
                },
                "ap-northeast-2" : {
                    "1" : "ap-northeast-2a",
                    "2" : "ap-northeast-2c"
                },
                "ap-southeast-1" : {
                    "1" : "ap-southeast-1a",
                    "2" : "ap-southeast-1b",
                    "3" : "ap-southeast-1c"
                },
                "ap-southeast-2" : {
                    "1" : "ap-southeast-2a",
                    "2" : "ap-southeast-2b",
                    "3" : "ap-southeast-2c"
                },
                "ca-central-1" : {
                    "1" : "ca-central-1a",
                    "2" : "ca-central-1b"
                },
                "eu-central-1" : {
                    "1" : "eu-central-1a",
                    "2" : "eu-central-1b",
                    "3" : "eu-central-1c"
                },
                "eu-west-1" : {
                    "1" : "eu-west-1a",
                    "2" : "eu-west-1b",
                    "3" : "eu-west-1c"
                },
                "eu-west-2" : {
                    "1" : "eu-west-2a",
                    "2" : "eu-west-2b",
                    "3" : "eu-west-2c"
                },
                "eu-west-3" : {
                    "1" : "eu-west-3a",
                    "2" : "eu-west-3b",
                    "3" : "eu-west-3c"
                },
                "sa-east-1" : {
                    "1" : "sa-east-1a",
                    "2" : "sa-east-1b",
                    "3" : "sa-east-1c"
                }
            }
        },
        "Resources" : {
            "Vpc" : {
                "Type" : "AWS::EC2::VPC",
                "Properties" : {
                    "CidrBlock" : { "Ref" : "VpcCidr" },
                    "InstanceTenancy" : { "Ref" : "VpcInstanceTenancy" }
                }
            },
            "InternetGateway" : {
                "Type" : "AWS::EC2::InternetGateway"
            },
            "RouteTable" : {
                "Type" : "AWS::EC2::RouteTable",
                "Properties" : {
                    "VpcId" : { "Ref" : "Vpc" }
                }
            },
            "VpcGatewayAttachment" : {
                "Type" : "AWS::EC2::VPCGatewayAttachment",
                "Properties" : {
                    "VpcId" : { "Ref" : "Vpc" },
                    "InternetGatewayId" : { "Ref" : "InternetGateway" }
                }
            },
            "SecurityGroup" : {
                "Type" : "AWS::EC2::SecurityGroup",
                "Properties" : {
                    "GroupDescription" : { "Ref" : "SecurityGroupDescription" },
                    "VpcId" : { "Ref" : "Vpc" },
                    "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "22",
                        "ToPort" : "22",
                        "CidrIp" : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "80",
                        "ToPort" : "80",
                        "CidrIp" : "0.0.0.0/0"
                    }
                    ]
                }
            },
            "Subnet1" : {
                "Type" : "AWS::EC2::Subnet",
                "Properties" : {
                    "AvailabilityZone" : { "Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "1" ] },
                    "CidrBlock" : { "Ref" : "Subnet1Cidr" },
                    "VpcId" : { "Ref" : "Vpc" },
                    "MapPublicIpOnLaunch" : "True"
                }
            },
            "Subnet2" : {
                "Type" : "AWS::EC2::Subnet",
                "Properties" : {
                    "AvailabilityZone" : { "Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "2" ] },
                    "CidrBlock" : { "Ref" : "Subnet2Cidr" },
                    "VpcId" : { "Ref" : "Vpc" },
                    "MapPublicIpOnLaunch" : "True"
                }
            },
            "Route" : {
                "Type" : "AWS::EC2::Route",
                "Properties" : {
                    "RouteTableId" : { "Ref" : "RouteTable" },
                    "DestinationCidrBlock" : "0.0.0.0/0",
                    "GatewayId" : { "Ref" : "InternetGateway" }
                }
            },
            "Subnet1RouteTableAssociation" : {
                "Type" : "AWS::EC2::SubnetRouteTableAssociation",
                "Properties" : {
                    "RouteTableId" : { "Ref" : "RouteTable" },
                    "SubnetId" : { "Ref" : "Subnet1" }
                }
            },
            "Subnet2RouteTableAssociation" : {
                "Type" : "AWS::EC2::SubnetRouteTableAssociation",
                "Properties" : {
                    "RouteTableId" : { "Ref" : "RouteTable" },
                    "SubnetId" : { "Ref" : "Subnet2" }
                }
            },
            "BatchServiceRole" : {
                "Type" : "AWS::IAM::Role",
                "Properties" : {
                    "RoleName" : { "Ref" : "BatchServiceRoleName" },
                    "AssumeRolePolicyDocument" : {
                        "Version" : "2012-10-17",
                        "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : "batch.amazonaws.com"
                            },
                            "Action" : "sts:AssumeRole"
                        }
                        ]
                    },
                    "ManagedPolicyArns" : [
                        "arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole"
                    ]
                }
            },
            "EcsInstanceRole" : {
                "Type" : "AWS::IAM::Role",
                "Properties" : {
                    "RoleName" : { "Ref" : "EcsInstanceRoleName" },
                    "AssumeRolePolicyDocument" : {
                        "Version" : "2008-10-17",
                        "Statement" : [
                        {
                            "Sid" : "",
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : "ec2.amazonaws.com"
                            },
                            "Action" : "sts:AssumeRole"
                        }
                        ]
                    },
                    "ManagedPolicyArns" : {
                        "Fn::Split" : [ ",", {
                            "Fn::Join" : [ ",", [
                                "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
                                { "Fn::Join" : [ ",", { "Ref" : "IamPolicies" } ] }
                            ] ]
                        } ]
                    }
                }
            },
            "IamInstanceProfile" : {
                "Type" : "AWS::IAM::InstanceProfile",
                "Properties" : {
                    "Roles" : [{ "Ref" : "EcsInstanceRole" }]
                }
            },
            "SpotFleetRole" : {
                "Type" : "AWS::IAM::Role",
                "Properties" : {
                    "RoleName" : { "Ref" : "SpotFleetRoleName" },
                    "AssumeRolePolicyDocument" : {
                        "Version" : "2008-10-17",
                        "Statement" : [
                        {
                            "Sid" : "",
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : "spotfleet.amazonaws.com"
                            },
                            "Action" : "sts:AssumeRole"
                        }
                        ]
                    },
                    "ManagedPolicyArns" : [
                        "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole"
                    ]
                }
            }
        },
        "Outputs" : {
            "BatchServiceRole" : {
                "Description" : "Batch Service Role ARN",
                "Value" : { "Fn::GetAtt" : [ "BatchServiceRole", "Arn" ] },
                "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-BatchServiceRole" }}
            },
            "EcsInstanceRole" : {
                "Description" : "ECS Instance Role ARN",
                "Value" : { "Fn::GetAtt" : [ "EcsInstanceRole", "Arn" ] },
                "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-EcsInstanceRole" }}
            },
            "InstanceProfile" : {
                "Description" : "ECS Instance Profile ARN",
                "Value" : { "Fn::GetAtt" : [ "IamInstanceProfile", "Arn" ] },
                "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-InstanceProfile" }}
            },
            "SpotFleetRole" : {
                "Description" : "Spot Fleet Role ARN",
                "Value" : { "Fn::GetAtt" : [ "SpotFleetRole", "Arn" ] },
                "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-SpotFleetRole" }}
            },
            "VpcId" : {
                "Description" : "VPC ID",
                "Value" : { "Ref" : "Vpc" },
                "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-VpcId" }}
            },
            "SubnetIds" : {
                "Description" : "Comma delimited list of subnet IDs",
                "Value" : { "Fn::Join" : [ ",", [ { "Ref" : "Subnet1" }, { "Ref" : "Subnet2" } ] ] },
                "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-SubnetIds" }}
            },
            "SecurityGroupId" : {
                "Description" : "Security Group ID",
                "Value" : { "Fn::GetAtt" : [ "SecurityGroup", "GroupId" ] },
                "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-SecurityGroupId" }}
            }
        }
}

