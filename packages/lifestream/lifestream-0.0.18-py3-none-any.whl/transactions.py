# -*- coding: utf-8 -*-
"""Package.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11O_Xk6mFn_lg5DzJmMDY3ouyTaPNrhgL
"""

import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import numpy as np
from matplotlib.pyplot import figure
from datetime import datetime
import matplotlib.ticker as mtick

def sales_chart(transaction_log, date_col, monetary_val, user_id):
  
  #Get time format correct of date column correct
  transaction_log[date_col] = pd.to_datetime(transaction_log[date_col])
  transaction_log['date'] = transaction_log[date_col].dt.date
  transaction_log['date'] = pd.to_datetime(transaction_log['date'])
  transaction_log = transaction_log.set_index('date')
  
  #Aggregate data on a monthly basis from transaction log
  df = transaction_log.groupby(pd.Grouper(freq="M"))[monetary_val, user_id].agg({monetary_val: 'sum', user_id: 'count'})
  
  #Plot
  fig, ax = plt.subplots()
  plt.gcf().autofmt_xdate()
  height = df[monetary_val]
  bars = pd.to_datetime(df.index)
  bars = bars.strftime("%b-%Y")
  y_pos = np.arange(len(bars))
  fmt = '${x:,.0f}'
  tick = mtick.StrMethodFormatter(fmt)
  ax.yaxis.set_major_formatter(tick)
  ax.set_xlabel('Month')
  ax.set_ylabel('Sales ($)')
  ax.set_title('Sales Over Time')
  plt.xticks(y_pos, bars)
  plt.bar(y_pos, height)
  every_nth = 4
  for n, label in enumerate(ax.xaxis.get_ticklabels()):
      if n % every_nth != 0:
          label.set_visible(False)
