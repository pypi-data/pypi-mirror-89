.\" 
.\" Man page for rmtoo requirement dependency graph output module
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 3 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" (c) 2010-2011 by flonatel (rmtoo@florath.net)
.\"
.TH rmtoo-art-req-dep-graph 1 2011-11-21 "User Commands" "Requirements Management"
.SH NAME
rmtoo-art-req-dep-graph \- requirements management tool: requirement dependency graph
.SH DESCRIPTION
The
.B rmtoo
requirement management tool organizes all the requirements in a
dependency tree.  This means, that each requirement is dependent from
another requirement (except the master requirement).
.P
The \fIrmtoo-art-req-dep-graph\fR output module creates the dependency
graph in a format which can 
be read in by graphviz tools like \fIdot\fR.
.SH CONFIGURATION
The configuration for this output module goes (as all other output
module's configuration) in the \fBoutput\fR section of the
configuration. 
.P
The first key must be \fIgraph\fR.  The following parameters are
allowed in the including map:
.P
.B output_filename
The filename where the output is written to.
.P
.B node_attributes
(This is optional!) When the key \fInode_attributes\fR exists, the
value must be a list of all information which is included in the
graph. The following values 
might be used:
.TP
\fBType\fR If this is included in the list, depending on the type the
border line of the node is colored (e.g. orange for initial
requirement, green for design decision, black for all other).
.TP
\fBStatus\fR If this is included in the list, depending on the status
of the requirement the font color is chosen (e.g. 'not done'
requirements uses a red font).
.TP
\fBClass\fR If this is included in the list, depending on the class
the shape of the node is rendered (e.g. for implementable requirements
a octagon is used to render the requirement).
.TP
\fBPriority\fR If this is included in the list, the priority of the
requirement is included.
.TP
\fBEffortEstimation\fR If this is included in the list, depending on
the effort estimation is included. Note: this is not included by
default. 
.P
Example
.sp
.RS
.nf
   "graph": [
      {
          "output_filename": "artifacts/req-graph1.dot"
          "node_attributes": 
              ["Type", "Status", "Class", "Topic", "Priority", ]
      }
   ]

.SH POSTPROCESSING
The resulting dot file can be converted with the following command to
a png: \fIdot -Tpng -o req-graph1.png req-graph1.dot\fR.  Please
consult the manual page for dot for more options and explanations. 
.P
Typically the graphs are very flat in the sense, that they are much
wider than high.  In this case it is mostly possible to
\fIunflatten\fR a graph with the help of the \fIunflatten(1)\fR tool
from the graphviz package.  Please consult the graphviz documentation
for detailed explanation.  An example is provided in the Makefile
which is provided in the tar ball.
.SH "SEE ALSO"
.B rmtoo(7)
- overview of rmtoo including all references to available documentation. 
.SH AUTHOR
Written by Andreas Florath (rmtoo@florath.net)
.SH COPYRIGHT
Copyright \(co 2010-2011 by flonatel (rmtoo@florath.net).
License GPLv3+: GNU GPL version 3 or later


