###
# This is a template config
###

[ldf_adapter]
# The Backend to use. Currently supported:
#  - local_unix
#  - bwidm
backend = bwidm

# Hardcoded primary group
#primary_group = mytestcollab

[assurance]
# The common prefix of the assurance claims used in require.  This is prepended to every value that
# does not start with 'http[s]://' by itself already.
prefix = https://refeds.org/assurance

# This can be an arbitrarly complex boolean expression of claims that need to be
# satisfied. Supported operatiors are '&' (logical and), '|' logical or, as well as '(' and ')' for
# parenthesis. Each terminal is a string(-suffix), which might be contained in the users
# eduperson_assurance. Special terminals are: '+', which means "any claim". And '*' which is always
# satisfied.
#
# Some (REFEDS) examples:
# require = profile/espresso
#   -> Require that all users have the espresso profile
# require = *
#   -> Allow any user, regargdless of their assurance
# require = +
#   -> Allow any user, as long as they have some assurance claim
# require = APT/ePA-1m & profile/cappuccino
#  | APT/ePA-1m & IAP/medium & eppn-unique-no-reassign
#  | APT/ePA-1m & https://aai.egi.eu/loA#Substantial & ID/eppn-unique-no-reassign
#   -> A more complex, but straightforward example
require = profile/cappuccino

# Block undeployment for disallowed users (this is allowed by default)
verified_undeploy = False

[backend.local_unix]
# Backend specific configuration. No options are available for local_unix.
shell = /bin/bash

[backend.local_unix.login_info]
# Static information on how to login to this service.
description = Local SSH Test Service
login_help = Login via `ssh {login_name}@{login_host}` using one of your deployed keys.
ssh_host = <Hostname of the HDF-portal>


[backend.bwidm]
# The base URL of the BWIDM API
url = https://bwidm-test.scc.kit.edu/rest

# The ID of the organisation
org_id = ldf

[backend.bwidm.auth]
# HTTP basic auth to connect to BWIDM API
http_user = foo
http_pass = bar

[backend.bwidm.service]
# The name of the service the user should be added to on BWIDM:
name = sshtest

[backend.bwidm.login_info]
description = SSH Test Service
login_help = Login via `ssh {login_name}@{login_host*}` using one of your deployed keys.
login_host = hdf-login.lsdf.kit.edu
login_host_alternative = hdf-ssh.data.kit.edu
